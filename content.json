{"meta":{"title":"Tiffany's Blog","subtitle":"Sharing work experiences and learning journey","description":"Sharing experiences and learning from work as an business-graduated engineer","author":"YUNCHENLI","url":"https://yunchenli.github.io/hexotestsite","root":"/hexotestsite/"},"pages":[{"title":"Resume","date":"2022-09-04T08:21:01.000Z","updated":"2022-09-04T08:25:01.372Z","comments":true,"path":"About/index.html","permalink":"https://yunchenli.github.io/hexotestsite/About/index.html","excerpt":"","text":"YUN-CHEN, LI(Tiffany) Technical Project Manager&#x2F;Data Analyst5 years working experiences in semiconductor and IC design field with 3+ years experiences of leading key projects under NPI&#x2F;MP and rich domain knowledge of operational process, hardware architecture and lifecycle, and system administration. Well-versed in the negotiation with cross-functional teams and scheduling on-boarding projects to drive operational optimization and business growth. Skills Data Visualization Programming Language Design Thinking Power BI, Tableau, Spotfire, R Python, Linux, HTML, CSS, MySQL, VBA Storytelling, Brainstorming, ORID, Customer journey Soft Skills Logistic and statistical Project management, Quality analysis (IPQC), Yield optimization, System integration, Troubleshooting, Time management, Cross-functional negotiation Quantitative and Qualitative analysis, Fuzzy-set Certificate Google Technical Support Fundamentals (2020) Google IT Automation with Python (2020) Kaggle Certificate – Intro of Python&#x2F;Intermediate Machine Learning&#x2F;Pandas (2021) ExperienceLenovo Chromebook Lead of Software Project Manager (MP) – Lenovo LCFC 2020&#x2F;09 – 2021&#x2F;08#Project management #Chrome OS #RMA #Operation management #Linux #Production analysis #MP Lead 16+ MP projects on maintaining 2nd source change and software change (firmware&#x2F;image&#x2F;hardware ID) assessment and troubleshooting on RMA (return merchandize authorization) products; handling 175+ issues within a quarter. Familiar with domain knowledge in typical hardware architecture and operation (BOMs), process documentation, assembly and test processes (Linux-based). Global RMA and Chrome OS training speaker for Lenovo 300+ front-end engineer in EMEA(Europe) regions. Formulate specifications and responsible as software focal of global RMA process, total solved ratio: 82%. Coordinate with all function teams to optimize FRU production line and outsourcing projects. Controlling and monitoring issues of TNB lifecycle with backlog notification and schedule tracking. System Analyst – Qualcomm 2019&#x2F;05 – 2020&#x2F;08#Project management #System integration #MP #IT #Supply chain management #Quality management Ensure quality of data completeness under production (WS&#x2F;FT), supplier data connection infrastructures and technical specification documents with MySQL, Hadoop, Spotfire for system analysis on maintaining yield (IPQC) and visualized data with Tableau, R, PowerBI, Spotfire Schedule 700+ tester upgrade plan (Advantest&#x2F;Teradyne) and on-boarding engineering projects&#x2F;business transaction across 16+ SATs, coverage rate is over 95% within three months. Responsible for fulfilling all internal end user IT needs (Inbound&#x2F;outbound operation) and drive production yields with cross-functional teams and track the validation results of products. Trouble-shooting and problem-solving skills to enhance supplier process, resolve production data quality issue and ensure supplier data deliverable meet specifications, also design and formulate process specifications. Technical project management of infrastructure deployment streams, including management of internal project resources and external vendors, including ink-off plan to improve production yield at TSMC… NPI Project Manager&#x2F;Data Engineer – Himax 2017&#x2F;03 – 2019&#x2F;04#Project management #Operation management #Quality analysis #Data visualization #NPI Define, drive, and manage the overall NPI project from RD and quality perspective across EVT&#x2F;DVT&#x2F;PVT phases. Analyze NPI data with R&#x2F;Minitab for data visualization, MATLAB for defect simulation, VBA for fab optimization, DPPM correlation and product correlation between system and ATE troubleshooting on different failure mode and test coverage improvement, QC tooling: 8D, MSA, Ishikawa, PDCA, SPC, quality testing (heat soak testing). Familiar with factory and operation process flow including AR coating, imprinting, dicing…, measurement instruments (AOI, Nikon, SEM…) of wire bond, SMT, also focus on DOE design. Collecting wafer defect data automatically and analyzing defect consistence to optimize production process. Increased efficiency by 90%. User Experience Engineer (Internship) – HTC 2016&#x2F;07 – 2016&#x2F;08#User Research #UX&#x2F;UI #Data visualization Analyze tech user’s using behavior with qualitative and quantitative methods and find out user’s insights and pain points, Tools: Tableau (data visualization), Excel, R (word cloud, data visualization and clustering users) EducationMaster - Department of Service Science at National Tsing-Hua University Dedicated in business analysis and information technology with human-oriented design thinking methods. My thesis: “Comparing fs&#x2F;QCA and PLS-PM models: Exploring the relationship between threats to technological self-esteem and opposition to alternative technologies”Kaggle.com, Google - Predict Repeat Restaurant Bookings Competition"}],"posts":[{"title":"Code shell command doesn't work due to Python 2 being removed","slug":"20220904-2","date":"2022-09-04T13:45:08.000Z","updated":"2022-09-04T13:53:54.413Z","comments":true,"path":"2022/09/04/20220904-2/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2022/09/04/20220904-2/","excerpt":"Summary In macOS 12.3 beta Apple removed support for Python 2. Additionally Python 3 no longer comes bundled with macOS. This causes the code command to not work anymore. https://www.macrumors.com/2022/01/28/apple-removing-python-2-in-macos-12-3/ https://www.idownloadblog.com/2022/01/28/python-macos-monterey-no-more/","text":"Summary In macOS 12.3 beta Apple removed support for Python 2. Additionally Python 3 no longer comes bundled with macOS. This causes the code command to not work anymore. https://www.macrumors.com/2022/01/28/apple-removing-python-2-in-macos-12-3/ https://www.idownloadblog.com/2022/01/28/python-macos-monterey-no-more/ Error message: 1command not found: code Solution: Open the Command Palette via ⇧ + ⌘ + P and type shell command to find the Shell Command: Use the Uninstall ‘code’ command in the PATH command before the “Install ‘code’ command in PATH” command.","categories":[],"tags":[]},{"title":"LeetCode-Longest Substring Without Repeating Characters","slug":"20220904","date":"2022-09-04T12:20:04.000Z","updated":"2022-09-04T13:54:28.811Z","comments":true,"path":"2022/09/04/20220904/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2022/09/04/20220904/","excerpt":"Given a string s, find the length of the longest substring without repeating characters.","text":"Given a string s, find the length of the longest substring without repeating characters. Example 1: 123Input: s = &quot;abcabcbb&quot; Output: 3 Explanation: The answer is &quot;abc&quot;, with the length of 3. 12345678910111213141516class Solution: def lengthOfLongestSubstring(self, s: str) -&gt; int: dic, res, start, = &#123;&#125;, 0, 0 for i, ch in enumerate(s): # when char already in dictionary if ch in dic: # check length from start of string to index res = max(res, i-start) # update start of string index to the next index start = max(start, dic[ch]+1) # add/update char to/of dictionary dic[ch] = i # answer is either in the begining/middle OR some mid to the end of string return max(res, len(s)-start)","categories":[],"tags":[]},{"title":"Test || How Create/Execute Shell Script in Linux?","slug":"20211201","date":"2021-12-04T16:00:00.000Z","updated":"2021-12-05T03:40:44.833Z","comments":true,"path":"2021/12/05/20211201/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/12/05/20211201/","excerpt":"This purpose of this article is for testing my simple shell script in Linux. Steps: Create a simple shell script Execiting script shell in terminal It’s simple. Let’s get started!","text":"This purpose of this article is for testing my simple shell script in Linux. Steps: Create a simple shell script Execiting script shell in terminal It’s simple. Let’s get started! Create a simple shell scriptTo craete a shell script: vim name You can type below examples for testing your script. Note: “vim” provides another verifications of programming language comapred with “vi”. Although you can use both to create your shell script. Example 1: 123echo &quot;Hello $USER.&quot;echo &quot;Today is $(date)&quot;echo &quot;Current working directory : $(pwd)&quot; Example 2: 12345echo &quot;What is your name?&quot;read nameecho &quot;How do you do, $name?&quot;read remarkecho &quot;I am $remark too!&quot; After typing your shell script, save it. To save it, press “Esc” to exit the insert mode and type “:w” to save the script. Type “:q” getting back to the console and execute the shell file to show output in the terminal. “ls” to check if the shell script had been created successfully. To execute a shell script“bash” to execute the schell script Follow above simple steps to run your own script. :P","categories":[{"name":"Learning","slug":"Learning","permalink":"https://yunchenli.github.io/hexotestsite/categories/Learning/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://yunchenli.github.io/hexotestsite/tags/Linux/"},{"name":"Shell script","slug":"Shell-script","permalink":"https://yunchenli.github.io/hexotestsite/tags/Shell-script/"}],"author":"TiffanyLi"},{"title":"For Beginner || Git and Gerrit","slug":"20211129","date":"2021-11-28T16:00:00.000Z","updated":"2022-03-06T07:25:00.630Z","comments":true,"path":"2021/11/29/20211129/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/11/29/20211129/","excerpt":"","text":"As you might know, Gerrit is where the git server located.There’s some terms that use mostly once running git. pull push commit code review cherry-pick rebase","categories":[{"name":"Learning","slug":"Learning","permalink":"https://yunchenli.github.io/hexotestsite/categories/Learning/"},{"name":"Work","slug":"Learning/Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Learning/Work/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://yunchenli.github.io/hexotestsite/tags/Git/"},{"name":"Gerrit","slug":"Gerrit","permalink":"https://yunchenli.github.io/hexotestsite/tags/Gerrit/"}],"author":"TiffanyLi"},{"title":"Some Tips for Project Management","slug":"20211128","date":"2021-11-27T16:00:00.000Z","updated":"2021-11-29T06:55:55.752Z","comments":true,"path":"2021/11/28/20211128/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/11/28/20211128/","excerpt":"Today’s topic would share some methodologies of project managements. Waterfall Agile Scrum Kanban Lean Six Sigma Lean Six Sigma","text":"Today’s topic would share some methodologies of project managements. Waterfall Agile Scrum Kanban Lean Six Sigma Lean Six Sigma WaterfallWaterfall is a traditional methodology in which tasks and phases are completed in a linear, sequential manner, and each stage of the project must be completed before the next begins. The project manager is responsible for prioritizing and assigning tasks to team members. In Waterfall, the criteria used to measure quality is clearly defined at the beginning of the project. AgileAgile involves short phases of collaborative, iterative work with frequent testing and regularly-implemented improvements. Some phases and tasks happen at the same time as others. In Agile projects, teams share responsibility for managing their own work. Scrum and Kanban are examples of Agile frameworks, which are specific development approaches based on the Agile philosophy. ScrumScrum is an Agile framework that focuses on developing, delivering, and sustaining complex projects and products through collaboration, accountability, and an iterative process. Work is completed by small, cross-functional teams led by a Scrum Master and is divided into short Sprints with a set list of deliverables. KanbanKanban is both an Agile approach and a tool that provides visual feedback about the status of the work in progress through the use of Kanban boards or charts. With Kanban, project managers use sticky notes or note cards on a physical or digital Kanban board to represent the team’s tasks with categories like “To do,” “In progress,” and “Done.” LeanLean uses the 5S quality tool to eliminate eight areas of waste, save money, improve quality, and streamline processes. Lean’s principles state that you can do more with less by addressing dysfunctions that create waste. Lean implements a Kanban scheduling system to manage production. Six SigmaSix Sigma involves reducing variations by ensuring that quality processes are followed every time. The Six Sigma method follows a process-improvement approach called DMAIC, which stands for define, measure, analyze, improve, and control. Lean Six SigmaLean Six Sigma is a combination of Lean and Six Sigma approaches. It is often used in projects that aim to save money, improve quality, and move through processes quickly. Lean Six Sigma is also ideal for solving complex or high-risk problems. The 5S quality tool, the DMAIC process, and the use of Kanban boards are all components of this approach. Above methodologies could be used in different scenarios in project management. You can use multiple methods at the same time as well. The final goal of project management is to proceed the schedule efficiently, deliver the timeline on time and have relative minimum cost during the process. Hope the sharing helps you in your career path.","categories":[{"name":"Learning","slug":"Learning","permalink":"https://yunchenli.github.io/hexotestsite/categories/Learning/"},{"name":"Work","slug":"Learning/Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Learning/Work/"}],"tags":[{"name":"Project management","slug":"Project-management","permalink":"https://yunchenli.github.io/hexotestsite/tags/Project-management/"},{"name":"Program management","slug":"Program-management","permalink":"https://yunchenli.github.io/hexotestsite/tags/Program-management/"},{"name":"Schedule","slug":"Schedule","permalink":"https://yunchenli.github.io/hexotestsite/tags/Schedule/"}],"author":"TiffanyLi"},{"title":"Basic Linux Command Sharing - Part1","slug":"20211125","date":"2021-11-24T16:00:00.000Z","updated":"2021-11-28T05:59:54.702Z","comments":true,"path":"2021/11/25/20211125/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/11/25/20211125/","excerpt":"1234Content:1. How to find file/directory2. How to move, copy or delete file/directory3. How to find keyword in specific file/directory","text":"1234Content:1. How to find file/directory2. How to move, copy or delete file/directory3. How to find keyword in specific file/directory How to find file&#x2F;directory1find ./ -name &quot;*.git&quot; -type d find file: type f find directory: type d How to move, copy or delete file&#x2F;directory1find ./ -name &quot;*.git&quot; -type d | xargs -i mv &#123;&#125; source move the directory, ‘.git’, to ‘source’ 1file * | grep &quot;source&quot; | awk &#x27;&#123;print $1&#125;&#x27; | cut -d&#x27;:&#x27; -f1 | xargs ls | xargs -i mv &#123;&#125; C/ find “source” and move to “C” directory 1find ./ -name &quot;*.git&quot; -type -d | xargs -i cp &#123;&#125; source copy directory, ‘*.got’, to ‘C’ directory 1find ./ -name &quot;*.git&quot; -type -d | xargs rm remove directory, ‘*.got’ How to find keyword in specific file&#x2F;directory1find ./ -name &quot;*.git&quot; -print0 | xargs -0 grep -r &quot;main&quot; --color 1find ./ -name &quot;*.git&quot; -print0 | xargs -0 ag &quot;main&quot;","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://yunchenli.github.io/hexotestsite/tags/Linux/"},{"name":"Gitfind","slug":"Gitfind","permalink":"https://yunchenli.github.io/hexotestsite/tags/Gitfind/"}],"author":"TiffanyLi"},{"title":"Data || Relational Databases vs Non-Relational Databases","slug":"20211117-2","date":"2021-11-16T16:00:00.000Z","updated":"2021-11-29T08:59:21.527Z","comments":true,"path":"2021/11/17/20211117-2/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/11/17/20211117-2/","excerpt":"Let’s dig deeper in databases.","text":"Let’s dig deeper in databases. RDBMSCloud-based relational databases Database-as-a-Service: Examples: Amazon RDS, Google SQL, IBM DB2 on Cloud, Oracle cloud, Azure cloud Well suited for OLTP(Online transaction processing) application: support transation-oriented tasks that run at high rates Data warehouses(OLAP(Online Analytical Processing)) IoT solutions Limitations: Does not work well with semi-structured and unstructed data Migration between two RDBMS’s is possible only when the source and destination tables have identical schemas and data types Entering a value greater than the identical length of a data field the results in loss of information NoSQL&#x2F;Non SQL Advantages: handle large volumes of structured, semi-structured, and unstructured data. run as distributed system scaled across multiple data centers cost-effective scale-out architecture simple design, better control key-value store: Redis, Memcached, DynamoDB Not a greate fit if you want to: Query data on specific data value Need relationships between data values Need multiple unique keys Document-base: MongoDB, DocumentDB, CouchDB, Cloudant Not a greate fit if you want to: Run complex search queries Perform multi-operation transactions Column-based: cassandra, Apache HBASE Not a greate fit if you want to: Run complex queries Change querying patterns frequently Graph-based: Neo4J, CosmosDB Not a greate fit if you want to: Process high volumes of transactions","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"SQL","slug":"SQL","permalink":"https://yunchenli.github.io/hexotestsite/tags/SQL/"},{"name":"Data","slug":"Data","permalink":"https://yunchenli.github.io/hexotestsite/tags/Data/"},{"name":"Non SQL","slug":"Non-SQL","permalink":"https://yunchenli.github.io/hexotestsite/tags/Non-SQL/"}],"author":"TiffanyLi"},{"title":"Data|Data Process Flow","slug":"20211117-3","date":"2021-11-16T16:00:00.000Z","updated":"2021-11-25T20:44:40.319Z","comments":true,"path":"2021/11/17/20211117-3/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/11/17/20211117-3/","excerpt":"Data process flow","text":"Data process flow Data WarehouseA data warehouse is a multi-purpose enabler of operational and performance analytics. Data Marts provide analytical capabilities for a restricted area of the data warehouse offer isolated security and isolated performance the most important role is business specific reporting and analytics Data LakesA pool of raw data where each data element is given a unique identifier and is tagged with metatags for further use and retains all source data without exclusions. ETLStaging area Data Pipeline","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Data","slug":"Data","permalink":"https://yunchenli.github.io/hexotestsite/tags/Data/"}],"author":"TiffanyLi"},{"title":"Common Data Sources","slug":"20211117","date":"2021-11-16T16:00:00.000Z","updated":"2021-11-17T08:19:25.291Z","comments":true,"path":"2021/11/17/20211117/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/11/17/20211117/","excerpt":"Sources of Data Relational databases Flat files and XML datasets APIs and web services Web scraping Data streams and feeds","text":"Sources of Data Relational databases Flat files and XML datasets APIs and web services Web scraping Data streams and feeds 1. Relational databases Examples: business activities, customer transactions, human resource activities, workflows Applications: SQL server, ORACLE, MySQL, IBM DB2 2. Flat files and XML datasets Flat files: store data in plain text format each line, or row, is one record each value is separated by a delimiter all of the data in the a file maps to a single table 3. APIs and web services Examples: twitter and facebook APIs, stock market APIs, data lookup and validation APIs 4. Web scraping Examples: collecting training and testing datasets for machine learning models… Applications: BeautiofulSoup, Scrapy, Pandas, Selenium… 5. Data streams and feeds Examples: Sensor data feeds for monitoring industial or farmoing machinery… Data repository: Data lake&#x2F; Data warehouseBig data stores","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Data","slug":"Data","permalink":"https://yunchenli.github.io/hexotestsite/tags/Data/"}],"author":"TiffanyLi"},{"title":"Data || Data structure - How to describe your data?","slug":"20211112","date":"2021-11-11T16:00:00.000Z","updated":"2021-11-29T08:59:07.939Z","comments":true,"path":"2021/11/12/20211112/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/11/12/20211112/","excerpt":"This article focuses on types of data, it will bring you to categorize data type for further analysis. What is ‘Data’? Facts, observations, perceptions Numbers, characters, symbols Images","text":"This article focuses on types of data, it will bring you to categorize data type for further analysis. What is ‘Data’? Facts, observations, perceptions Numbers, characters, symbols Images So, basically, ‘data’ exists everywhere and we can transform diff data types into whatever we want to forecast and make decisions. Types of Data Structured data Definition: well-defined structure and represented in a tabular manner with rows and columns. Stored in: SQL databases, online transaction processing, spreadsheets, online forms, sensors GPS and RFID, Network and web server logs. Semi-structured data Definition: some organizational properties but lacks a fixed or rigid schema and contains tags or metadata. Stored in: e-mails, XML and other markup languages, binary executables, TCP&#x2F;IP packets, zipped files, integration of data from diff sources. Unstructured data Definition: not follow any particular format, sequence, semantics, or rules and not have easily identifiable structure. Stored in: web pages, social media feeds, images in varied file formats, video and sudio files, documents and PDF files, PPT, media logs, surveys. Ok, so now we know there’s diff structure of data and then we can start to categorize them to do analysis!","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Data","slug":"Data","permalink":"https://yunchenli.github.io/hexotestsite/tags/Data/"}],"author":"TiffanyLi"},{"title":"Tensorflow || What is tensors?","slug":"20211111","date":"2021-11-10T16:00:00.000Z","updated":"2021-11-29T08:58:52.433Z","comments":true,"path":"2021/11/11/20211111/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/11/11/20211111/","excerpt":"DefinitionTensorflow is a free and open-source software library for machine learning and artificial intelligence. Features AutoDifferentiation Eager execution Distribute Losses Metrics TF.nn Optimizers ApplicationsTensorFlow is available on 64-bit Linux, macOS, Windows, and mobile computing platforms including Android and iOS. Before staring this session, you can import tensorflow and check current version at the first time. 12import tensorflow as tfprint(tf.__version__)","text":"DefinitionTensorflow is a free and open-source software library for machine learning and artificial intelligence. Features AutoDifferentiation Eager execution Distribute Losses Metrics TF.nn Optimizers ApplicationsTensorFlow is available on 64-bit Linux, macOS, Windows, and mobile computing platforms including Android and iOS. Before staring this session, you can import tensorflow and check current version at the first time. 12import tensorflow as tfprint(tf.__version__) What is ‘tensors’? Scalar: a single number Vecotr: a number with direction ( e.g. wind speed and direction) Matrix: a 2-dimentional array of numbers Tensor : a n-dimentional array of numbers (when n can be any number, a 0-dimentional tensor is a scalar, a 1-dimentional tensor is a vector) 123#Create tensors with tf.constant()scalar = tf.constant(7) #Create tensors with tf.constant() scalar &#x3D; tf.constant(7)scalar check the number of dimensions of a tensor (ndim stands for number of dimensions)scalar.ndim Create a vectorvector &#x3D; tf.constant([10, 10])vector Create the dimension of our vectorvector.ndim Create a matrix (has more than 1 dimension)matrix &#x3D; tf.constant([[10, 7], [7, 10]])matrix matrix.ndim Create another matrixanother_matrix &#x3D; tf.constant([[10., 7.], [3., 2.],[8., 9.]], dtype &#x3D; tf.float16) # specify the data type with dtype parameter another_matrix another_matrix.ndim Let’s create a tensortensor &#x3D; tf.constant([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]], [[13, 14, 15], [16, 17, 18]]])tensor tensor.ndim What we’ve created so far: Scalar: a single number Vecotr: a number with direction ( e.g. wind speed and direction) Matrix: a 2-dimentional array of numbers Tensor: a n-dimentional array of numbers (when n can be any number, a 0-dimentional tensor is a scalar, a 1-dimentional tensor is a vector) Creating tensors with tf.Variabletf.Variable Create the same tensor with tf.Variable() as aboveimport tensorflow as tfchangeable_tensor &#x3D; tf.Variable([10, 7])unchangeable_tensor &#x3D; tf.constant([10, 7]) changeable_tensor, unchangeable_tensor Let’s try change one of the elements in our changeable tensorchangeable_tensor[1].assign(8)changeable_tensor Let’s try unchangeable tensorunchangeable_tensor[0].assign(8)unchangeable_tensor Create random tensorRandom tensors are tensors of some abitrary size which contain random numbers. Create two random (but the same) tensorsrandom_1 &#x3D; tf.random.Generator.from_seed(5) # set seed for reproducibilityrandom_1 &#x3D; random_1.normal(shape&#x3D;(3, 2))#random_2 &#x3D; tf.random.Generator.from_seed(5) # random.normal &#x3D; random w&#x2F; normal distributionrandom_2 &#x3D; random_2.normal(shape &#x3D; (3, 2)) random_1, random_2 are they equalrandom_1, random_2, random_1 &#x3D;&#x3D; random_2 Shuffle the order of elements in a tensorShuffle a tensor (valuable for when you want to shuffle your data so the inherent order doesn’t effect learning)not_shuffled &#x3D; tf.constant([[10, 7], [3, 4], [2, 7]]) Shuffle our non-shuffled tensorstf.random.shuffle(not_shuffled) Shuffle our non-shuffled tensorstf.random.set_seed(42) # global level seedtf.random.shuffle(not_shuffled, seed &#x3D; 42) # operation level seed if both global and operation seed are set: Both seeds are used in conjunction to determine the random sequenceExercise: Read through Tensorflow doc on random seed generation:https://www.tensorflow.org/api_docs/python/tf/random/set_seed tf.random.set_seed(1234)print(tf.random.uniform([1], seed &#x3D; 42)) # generates ‘A1’print(tf.random.uniform([1])) # generates ‘A2’ tf.random.set_seed(1234) @tf.functiondef f(): a &#x3D; tf.random.uniform([1]) b &#x3D; tf.random.uniform([1]) return a, b @tf.functiondef g(): a &#x3D; tf.random.uniform([1]) b &#x3D; tf.random.uniform([1]) return a, b print(f()) # prints ‘(A1, A2)’print(g()) # prints ‘(A1, A2)’ import tensorflow as tf not_shuffled &#x3D; tf.constant([[10, 7], [3, 4], [2, 7]])tf.random.set_seed(42) # if we set global random seed, we cam the same order at every timetf.random.shuffle(not_shuffled, seed &#x3D; 42) # if we set operation-level random seed, we get different order every time. Other ways to get tensorstf.ones tf.ones([10, 7]) Create a tensor w&#x2F; all zerostf.zeros([10, 7]) You can also turn numPy arrays into tensorsTurn NumPy arrays into tensorsthe main difference between Numpy and tensorflow tensors is that tensors can be run on a GPU computing. import numpy as npnumpy_A &#x3D; np.arange(1, 25, dtype &#x3D; np.int32) # Create a NumPy array between 1 and 25numpy_A X &#x3D; tf.constant(some_matrix) # capital for matrixY &#x3D; tf.constant(vector) # non-capital for vectorA &#x3D; tf.constant(numpy_A, shape&#x3D;(2 ,3, 4))B &#x3D; tf.constant(numpy_A)C &#x3D; tf.constant(numpy_A, shape&#x3D;(3, 8))D &#x3D; tf.constant(numpy_A, shape&#x3D;(2,12))A, B, CA.ndim, B.ndim, C.ndim, D.ndimtf.size(A) Getting information from tensors Shape: tensor.shape Rank: tensor.ndim Axis or dimenson: tensor[0], tensor[:, 1] Size: tf.size(tensor) Create a rank 4 tensorrank_4_tensor &#x3D; tf.zeros(shape&#x3D;[2, 3, 4, 5])rank_4_tensor[0] rank_4_tensor.ndim, tf.size(rank_4_tensor), rank_4_tensor.shape # numpy &#x3D; 234*5&#x3D;120 Get various attributes of our tensorprint(“Datatype of every element:”, rank_4_tensor.dtype)print(“Number of dimensions (rank):”, rank_4_tensor.ndim)print(“Shape of tensor:”, rank_4_tensor.shape)print(“Elements along the 0 axis:”, rank_4_tensor.shape[0])print(“Elements along the last axis:”, rank_4_tensor.shape[-1]) #last axisprint(“Total number of elements in our tensor:”, tf.size(rank_4_tensor))print(“Total number of elements in our tensor:”, tf.size(rank_4_tensor).numpy())print(“Total number of elements in our tensor:”, tf.size(rank_4_tensor).dtype) Indexing tensorstensors can be indexed just like python lists. Get the first two elements of each dimensionsrank_4_tensor[:2, :2, :2, :2] Get the first element from each dimension from each index except for the final onerank_4_tensor[:1, :1, :1, :]rank_4_tensor[:, :1, :1, :1] Create a rank 2 tensorsrank_2_tensor &#x3D; tf.constant([[10, 7], [2, 3]])rank_2_tensor, rank_2_tensor.shape, rank_2_tensor[:,-1] Add dimensions (tf.newaxis, tf.expand_dims)rank_3_tensor &#x3D; rank_2_tensor[…, tf.newaxis]rank_3_tensor, tf.expand_dims(rank_2_tensor, axis &#x3D; -1) # “-1” means expand the final axis Manipulagting tensors(tensor operations)** Basic operations ** +, -, *, / tensor &#x3D; tf.constant([[10, 7],[3, 4]])tensor + 10, tensor * 2 # tf.multiply(tensor, 2) Matrix multiplicationIn ML, matriox multiplication is one of the most common tensor operations. ** Resource: matrix multiplication: https://www.mathsisfun.com/algebra/matrix-multiplying.html There are two rules our tensors (or matrices) need to fulfil if we’re going to matrix multiply them: the inner dimensions must match the resulting matrix has the shape of the outer dimensions tensor, tensor @ tensor, tensor * tensor Try to matrix multiply tensors of same shapeimport tensorflow as tfX &#x3D; tf.constant([[10, 7], [3, 4]])Y &#x3D; tf.constant([[10, 7], [3, 4]]) tf.matmul(X, Y), X @ Y Let’s change shapoe (tf.reshape), can do the same with transpose (tf.transpose)import tensorflow as tfZ &#x3D; tf.constant([[10,7,4],[2,3,10],[1, 2, 3]]) X &#x3D; tf.constant([[1,2], [3,4], [5,6]])X_reshaped &#x3D; tf.reshape(X, shape&#x3D;(2, 3)) # witih same amount of valuesX_transposed &#x3D; tf.transpose(X) X_reshaped @ Z, tf.transpose(X) ** The dot product** Matrix multiplication is also referred to as the dot product. You can perform matrix multiplication using: tf.matmul() tf.tensordot() Changing a new tensor with default datatype (float32)B &#x3D; tf.constant([1.7, 7.4, 8.6])C &#x3D; tf.constant([1.7])D &#x3D; tf.constant([1, 7])E &#x3D; tf.constant([1., 2.])B, C, D, E Change from float32 to float16 (tf.cast)B &#x3D; tf.cast(B, dtype&#x3D;tf.float16)B B.dtype Aggregating tensorsAggregating tensors &#x3D; condensing then from multiple values down to a smaller amount of values get an absolute values (tf.abs)F &#x3D; tf.constant([-3, -5])tf.abs(F) Create a random tensors with values between 0 and 100 of size 50import numpy as npG &#x3D; tf.constant(np.random.randint(0, 100, size&#x3D;50))G tf.size(G), G.shape, G.ndim Find min, max, mean, sumtf.reduce_min(G), tf.reduce_max(G), tf.reduce_mean(G), tf.reduce_sum(G) Find (tfp.stats.variance, tf.math.reduce_std) - To define variance of our tensor, we need access to tensorflow_probabilityimport tensorflow_probability as tfptfp.stats.variance(G), tf.math.reduce_std(tf.cast(G, dtype &#x3D; tf.float32)) # define standard deviation Find the position maximum and minimumCreate a new tensor for finding positional min and maximport tensorflow as tftf.random.set_seed(42)F &#x3D; tf.random.uniform(shape&#x3D;[50])F, tf.argmax(F) Index on our largest value positionF[tf.argmax(F)] Find the max valuetf.reduce_max(F) Check for equalityF[tf.argmax(F)] &#x3D;&#x3D; tf.reduce_max(F) Find the positional min, min valuetf.argmin(F), F[tf.argmin(F)]","categories":[{"name":"Learning","slug":"Learning","permalink":"https://yunchenli.github.io/hexotestsite/categories/Learning/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://yunchenli.github.io/hexotestsite/tags/Python/"},{"name":"Tensorflow","slug":"Tensorflow","permalink":"https://yunchenli.github.io/hexotestsite/tags/Tensorflow/"}],"author":"TiffanyLi"},{"title":"Python || How to find duplicates","slug":"20211104","date":"2021-11-03T16:00:00.000Z","updated":"2021-11-29T08:58:35.728Z","comments":true,"path":"2021/11/04/20211104/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/11/04/20211104/","excerpt":"Let’s start from ‘Counter’(https://docs.python.org/2/library/collections.html). built-in container: ‘dict’, ‘list’, ‘set’ ‘tuple’","text":"Let’s start from ‘Counter’(https://docs.python.org/2/library/collections.html). built-in container: ‘dict’, ‘list’, ‘set’ ‘tuple’ 1234567891011from collections import Countertest_src = [&#x27;a&#x27;,&#x27;b&#x27;,&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;b&#x27;,&#x27;a&#x27;]result = Counter(test_src)elements = list(result.elements())most_common = result.most_common()print(result)print(elements)print(most_common) Counter({‘a’: 3, ‘b’: 3, ‘c’: 1})[‘a’, ‘a’, ‘a’, ‘b’, ‘b’, ‘b’, ‘c’][(‘a’, 3), (‘b’, 3), (‘c’, 1)]","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://yunchenli.github.io/hexotestsite/tags/Python/"}],"author":"TiffanyLi"},{"title":"為什麼產線也要應用Digital Twins優化","slug":"20211103","date":"2021-11-02T16:00:00.000Z","updated":"2021-11-12T08:35:39.249Z","comments":true,"path":"2021/11/03/20211103/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/11/03/20211103/","excerpt":"有幸在某個面試中了解到大陸產線的作業已經開始導入Digital Twins(模擬製作)，為了更真實描繪工廠情境並預測即將發生的事情。","text":"有幸在某個面試中了解到大陸產線的作業已經開始導入Digital Twins(模擬製作)，為了更真實描繪工廠情境並預測即將發生的事情。 簡單的說就是使用開放式模型化語言，輕鬆建立連線環境的模型並以數位方式呈現。建立大樓、工廠、農場、能源網路、鐵路、運動場，甚至是整個城市的模型。利用即時執行環境，在健全的事件系統上建立動態商務邏輯及資料處理，來呈現這些數位分身。 也可以理解成現在的元宇宙(Metaverse),用來描述未來全場景虛擬網際網路的環境，在共享、持久的3D虛擬空間內，組成一個可感知的虛擬宇宙。 沒錯，這確實是工業4.0一個很重要的環節。以我的經驗來看，目前的產線結合主要是數據的搜集等，如果真能被廣泛應用在工廠場域的三維模擬是一個突破，也是撇除數據基本分析外，更進一步探討預測的本質。 反觀，前提還是工業4.0物聯網IoT的整合運用普及為目標，再導入digital twins才能優化產能，甚至為企業節約產線額外成本。","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Digital Twins","slug":"Digital-Twins","permalink":"https://yunchenli.github.io/hexotestsite/tags/Digital-Twins/"},{"name":"AI","slug":"AI","permalink":"https://yunchenli.github.io/hexotestsite/tags/AI/"},{"name":"AR/VR","slug":"AR-VR","permalink":"https://yunchenli.github.io/hexotestsite/tags/AR-VR/"}],"author":"TiffanyLi"},{"title":"淺談Chromebook在台發展","slug":"20211102-2","date":"2021-11-01T16:00:00.000Z","updated":"2021-11-29T08:59:32.422Z","comments":true,"path":"2021/11/02/20211102-2/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/11/02/20211102-2/","excerpt":"還記得Computex 2011談到Google要在台灣成立ChromeOS團隊並與ODM&#x2F;OEM密切合作的新聞嗎？ 如今時空一轉，來到2021年了，度過疫情的一年讓我們先從產品面探討Chromebook對於使用者的影響以及相較於Ｗindows系統有什麼差別吧。","text":"還記得Computex 2011談到Google要在台灣成立ChromeOS團隊並與ODM&#x2F;OEM密切合作的新聞嗎？ 如今時空一轉，來到2021年了，度過疫情的一年讓我們先從產品面探討Chromebook對於使用者的影響以及相較於Ｗindows系統有什麼差別吧。 Chromebook? 即開即用，不會有等待開機的問題 即開即連，設定好厚，開機即連線。強調線上作業和雲端整合 電力充足，由於主要操作模式都在聯網狀態下，以現行市面上的Chromebook，不需要使用高效能CPU","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Chromebook","slug":"Chromebook","permalink":"https://yunchenli.github.io/hexotestsite/tags/Chromebook/"},{"name":"ChromOSO","slug":"ChromOSO","permalink":"https://yunchenli.github.io/hexotestsite/tags/ChromOSO/"}],"author":"TiffanyLi"},{"title":"為什麼用Hexo製作網站，圖片無法顯示呢？","slug":"20211102","date":"2021-11-01T16:00:00.000Z","updated":"2021-11-12T08:35:06.798Z","comments":true,"path":"2021/11/02/20211102/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/11/02/20211102/","excerpt":"當用Hexo成功搞定個人部落格後，發現圖片都無法顯示怎麼辦？ 一剛開始爬文發現很多人可以直接建立 new post, 再把圖片放進相對應的post folder.","text":"當用Hexo成功搞定個人部落格後，發現圖片都無法顯示怎麼辦？ 一剛開始爬文發現很多人可以直接建立 new post, 再把圖片放進相對應的post folder. 所以我也多方嘗試了以下幾個方式 放到相對應資料夾，直接寫入filename（本地相對路徑）1![pic description](file name.png) 放到相對應資料夾，寫入folder名稱（本地絕對路徑）1![pic description](folder name/file name.png) 利用src寫入1![pic description](https://XXX.jpg) 最後，這幾個連結的方式皆無法呈現我的本地照片，因此下面是我的解決方法 Solution:找到線上圖片存放網站，把圖片統一存放至雲端。這邊我用的是Imgur 接著只要把圖片傳上去，確認Markdown link就可以顯示照片啦~提供了image link, direct link, markdown link, HTML, BBCode, Linked BBCode, 還可以直接線上編輯圖片的功能。 這樣我們就解決照片顯示的問題囉！","categories":[{"name":"Learning","slug":"Learning","permalink":"https://yunchenli.github.io/hexotestsite/categories/Learning/"}],"tags":[{"name":"Github","slug":"Github","permalink":"https://yunchenli.github.io/hexotestsite/tags/Github/"},{"name":"Hexo","slug":"Hexo","permalink":"https://yunchenli.github.io/hexotestsite/tags/Hexo/"}],"author":"TiffanyLi"},{"title":"Hexo deploy Error Spawn failed解決方案 - Part2","slug":"20211101","date":"2021-10-31T16:00:00.000Z","updated":"2021-11-12T09:12:33.962Z","comments":true,"path":"2021/11/01/20211101/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/11/01/20211101/","excerpt":"作業系統：macOS機台：MacBook Pro 繼之前 Hexo deploy Error Spawn failed解決方案 - Part1 之後，我立馬又遇到困難導致寫的部落格無法deploy 這一次的error log 1Please make sure you have the correct access rights and the repository exists.","text":"作業系統：macOS機台：MacBook Pro 繼之前 Hexo deploy Error Spawn failed解決方案 - Part1 之後，我立馬又遇到困難導致寫的部落格無法deploy 這一次的error log 1Please make sure you have the correct access rights and the repository exists. 幾經操作後，終於解了我這兩個禮拜的困擾。原來這有可能是ssh設定的問題，可能等級太低，我發了一番工夫才debug成功。 如果你剛好遇到這個問題，請發漏以下步驟試看看可以節省很多時間～ 首先，進入terminal &gt; 重新產出 ssh key 1ssh-keygen -t ed25519 -C &quot;***@gmail.com&quot; Generating public&#x2F;private ed25519 key pair. Enter file in which to save the key輸入密碼並儲存 12Enter passphrase (empty for no passphrase): Enter same passphrase again: ssh key 已經創建完成，接下來先確認identity added in ssh folder 1ssh-add -K ~/.ssh/id_ed25519 Identity added: &#x2F;Users&#x2F;tiffanyli&#x2F;.ssh&#x2F;id_ed25519 (&#x74;&#x69;&#102;&#102;&#97;&#110;&#x79;&#108;&#x65;&#101;&#x2e;&#116;&#x69;&#x66;&#x66;&#x61;&#110;&#x79;&#64;&#103;&#x6d;&#97;&#x69;&#108;&#46;&#99;&#x6f;&#109;) Identity added 複製ssh key以便新增至Github 1pbcopy &lt; ~/.ssh/id_ed25519.pub 設定Github內的 ssh key, 先進入Github &gt; Setting &gt; SSH and GPG keys 設定完成後，重新hexo cl &gt; hexo g &gt; hexo d &gt; 完成 設定完後就順利deploy文章到github page了～在嘗試過程中可以再確認一下是不是因為git version的關係等等逐步排查。如果這方法有解決你的問題，那就恭喜囉～","categories":[{"name":"Learning","slug":"Learning","permalink":"https://yunchenli.github.io/hexotestsite/categories/Learning/"}],"tags":[{"name":"Github","slug":"Github","permalink":"https://yunchenli.github.io/hexotestsite/tags/Github/"},{"name":"Hexo","slug":"Hexo","permalink":"https://yunchenli.github.io/hexotestsite/tags/Hexo/"}],"author":"TiffanyLi"},{"title":"五分鐘看懂Google Analytics","slug":"20211020","date":"2021-10-19T16:00:00.000Z","updated":"2021-11-12T09:10:49.672Z","comments":true,"path":"2021/10/20/20211020/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/10/20/20211020/","excerpt":"Google分析是一個由Google所提供的網站流量統計服務。Google 分析現在是網際網路上使用最廣泛的網路分析服務。 讓我們快速browse GA的應用面，看完就可以實作專案監測網站的瀏覽人數囉～","text":"Google分析是一個由Google所提供的網站流量統計服務。Google 分析現在是網際網路上使用最廣泛的網路分析服務。 讓我們快速browse GA的應用面，看完就可以實作專案監測網站的瀏覽人數囉～ 1. 先來了解一下GA介面的四大報表 目標對象 客戶開發 行為 轉換 用戶在瀏覽網站時候的用戶體驗，如何定義「好的」用戶體驗？1.該網頁就可以滿足訪客所有需要知道的資訊需求?2.某網站全站只有一頁(如現在的瀑布流… 故這樣也就無法換頁..)3.Google Analytics 追蹤程式碼安裝未完全?4.該頁面上有部長度不到30分鐘的 Flash 或影片播放且還沒看完就突然要關掉視窗…..?5.也如剛剛提到.. 因為網站 SEO 做太好所導致… 2. 追蹤原理網站安裝GA代碼(JavaScript追蹤碼)其使用者追蹤原理 Client ID - CID Google analystics會發送一組cookie到你的browser, 類似cookie的作用 缺點： 使用者分群以device（追蹤碼）為主，無法確認是否同一人使用多機狀態 如果使用者清除了cookie的紀錄，Google analystics無法辨認出是否同一人 3. 來源&#x2F;媒介來源與媒介可以從客戶開發 &gt; 所有流量 &gt; 來源媒介 來源：流量的來源，像是搜尋引擎 (如 google) 或網域 (如 example.com) 媒介：來源的一般類別，像是隨機搜尋 (「隨機」)、單次點擊出價付費搜尋 (「單次點擊出價」) 或網路參照連結網址 (「參照連結網址」) 「來源&#x2F;媒介」是結合了「來源」和「媒介」這兩項維度的綜合維度，「google&#x2F;随機」、「example.com&#x2F;參照連結網址」和「newsletter9-2014&#x2F;電子郵件」等都屬於這種維度。 至於來源媒介的分類可以參考下面的圖例 要開始入門GA了嗎？可以參考連結的示範帳戶實現GA分析https://support.google.com/analytics/answer/6367342?authuser=1 Summary此篇重點在於了解GA四大報表、追蹤功能設定以及來源媒介的區分，這些將有助於之後深入瞭解分析用戶。","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Google Analytics","slug":"Google-Analytics","permalink":"https://yunchenli.github.io/hexotestsite/tags/Google-Analytics/"}],"author":"TiffanyLi"},{"title":"Err Unexpected Numeric Constant(R)","slug":"20211-18","date":"2021-10-17T16:00:00.000Z","updated":"2021-11-12T09:09:36.241Z","comments":true,"path":"2021/10/18/20211-18/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/10/18/20211-18/","excerpt":"當table的column name出現數字的時候，舉例：年份, 年齡…If command 表格＄年份 Then it occurs 1Error: unexpected numeric constant in &quot;...","text":"當table的column name出現數字的時候，舉例：年份, 年齡…If command 表格＄年份 Then it occurs 1Error: unexpected numeric constant in &quot;... 以下表格出現數字的欄位名稱，當要選取欄位的時候，會出現錯誤Error: unexpected numeric constant 假定表格如附圖Solution只要在欄位名稱加上“”，就能解決this error message","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"R","slug":"R","permalink":"https://yunchenli.github.io/hexotestsite/tags/R/"},{"name":"Troubleshooting","slug":"Troubleshooting","permalink":"https://yunchenli.github.io/hexotestsite/tags/Troubleshooting/"}],"author":"TiffanyLi"},{"title":"資料視覺化利用簡單的公式呈現","slug":"20211018","date":"2021-10-17T16:00:00.000Z","updated":"2021-11-12T09:08:46.907Z","comments":true,"path":"2021/10/18/20211018/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/10/18/20211018/","excerpt":"這一篇介紹Tableau簡單的公式設定來達到想要的圖表呈現效果。首現，Tableau為付費軟體，所以我們可以下載30天試用版或是使用Tableau Public","text":"這一篇介紹Tableau簡單的公式設定來達到想要的圖表呈現效果。首現，Tableau為付費軟體，所以我們可以下載30天試用版或是使用Tableau Public","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Data Visulization","slug":"Data-Visulization","permalink":"https://yunchenli.github.io/hexotestsite/tags/Data-Visulization/"}],"author":"TiffanyLi"},{"title":"Python || Local Minima","slug":"20211012-2-1","date":"2021-10-11T16:00:00.000Z","updated":"2021-11-29T08:57:34.090Z","comments":true,"path":"2021/10/12/20211012-2-1/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/10/12/20211012-2-1/","excerpt":"Local minima: 指的是在做梯度下降時，最佳點落在了局部最低處，而非 Global Minima。可以用 Momentum 來降低困在 Local Minima 的機率。","text":"Local minima: 指的是在做梯度下降時，最佳點落在了局部最低處，而非 Global Minima。可以用 Momentum 來降低困在 Local Minima 的機率。 123456789101112131415161718192021def FindLocalMinima(numbers): minima = [] length = len(numbers) if length &gt;= 2: if numbers[0] &lt; numbers[1]: minima.append(numbers.index(numbers[0])) if length &gt; 3: for i in range(1, length-1): if numbers[i] &lt; numbers[i-1] and numbers[i] &lt; numbers[i+1]: minima.append(numbers.index(numbers[i])) if numbers[length-1] &lt; numbers[length-2]: minima.append(numbers.index(numbers[length-1])) return minima numbers = [2, 7, 45, 3, 6, 98, 12, 67, 8]FindLocalMinima(numbers) [0, 3, 6, 8] 如果我們假定非字串而是隨機整數去尋找local minima 123456789101112131415161718192021def FindLocalMinima(numbers): minima = [] length = len(numbers) if length &gt;= 2: if numbers[0] &lt; numbers[1]: minima.append(numbers[0]) if length &gt; 3: for i in range(1, length-1): if numbers[i] &lt; numbers[i-1] and numbers[i] &lt; numbers[i+1]: minima.append(numbers[i]) if numbers[length-1] &lt; numbers[length-2]: minima.append(numbers[length- return minima rand_ary = rd.sample(range(1,2000000),1000000)print(&quot;million local minima:&quot;)print(FindLocalMinima(rand_ary))","categories":[{"name":"Learning","slug":"Learning","permalink":"https://yunchenli.github.io/hexotestsite/categories/Learning/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://yunchenli.github.io/hexotestsite/tags/Python/"},{"name":"Deep learning","slug":"Deep-learning","permalink":"https://yunchenli.github.io/hexotestsite/tags/Deep-learning/"},{"name":"Machine learning","slug":"Machine-learning","permalink":"https://yunchenli.github.io/hexotestsite/tags/Machine-learning/"}],"author":"TiffanyLi"},{"title":"Hexo deploy Error Spawn failed解決方案 - Part1","slug":"20211012","date":"2021-10-11T16:00:00.000Z","updated":"2021-11-12T09:10:39.605Z","comments":true,"path":"2021/10/12/20211012/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/10/12/20211012/","excerpt":"當Hexo deploy時會遇到無法deploy的問題，如下error log: 12345678FATAL &#123; err: Error: Spawn failed at ChildProcess.&lt;anonymous&gt; (/Users/tiffanyli/yunchenli.github.io/node_modules/hexo-util/lib/spawn.js:51:21) at ChildProcess.emit (node:events:394:28) at Process.ChildProcess._handle.onexit (node:internal/child_process:290:12) &#123; code: 128 &#125;","text":"當Hexo deploy時會遇到無法deploy的問題，如下error log: 12345678FATAL &#123; err: Error: Spawn failed at ChildProcess.&lt;anonymous&gt; (/Users/tiffanyli/yunchenli.github.io/node_modules/hexo-util/lib/spawn.js:51:21) at ChildProcess.emit (node:events:394:28) at Process.ChildProcess._handle.onexit (node:internal/child_process:290:12) &#123; code: 128 &#125; Solution 1:12345678910111213##進入根目錄cd /usr/local/src/hexo/hanyubolg/##删除git提交的文件夾rm -rf .deploy_git/##執行git config --global core.autocrlf false##最後hexo clhexo ghexo d Solution 2:更改部署網址，可以將https方式變更成ssh方式 12345678910111213141516171819##進入根目錄cd /usr/local/src/hexo/hanyubolg/##删除git提交内容文件夾vim _config.yml##修改deploy:type: gitrepo: https://github.com/YunChenLi/hexotestsite.git -&gt; git@github.com:YunChenLi/hexotestsite.gitbranch: master##最後hexo clhexo g hexo d Solution 3:強制從deploy_git推送 12345678##進入根目錄cd /usr/local/src/hexo/hanyubolg/##進deploy文件夾cd .deploy_git/##強制推送git push -f 以上三個方式可以解決Error: Spawn failed的問題。當然部署中可能也會遇到輸入Github帳密才能部署完成，你也可以使用 Github 提供的 SSH 方法來連接。根據官方格式將 _config.yml 中的佈署設定 deploy 裡面的 repo 改為對應的 SSH 連結。","categories":[{"name":"Learning","slug":"Learning","permalink":"https://yunchenli.github.io/hexotestsite/categories/Learning/"}],"tags":[{"name":"Github","slug":"Github","permalink":"https://yunchenli.github.io/hexotestsite/tags/Github/"},{"name":"Hexo","slug":"Hexo","permalink":"https://yunchenli.github.io/hexotestsite/tags/Hexo/"},{"name":"HTML","slug":"HTML","permalink":"https://yunchenli.github.io/hexotestsite/tags/HTML/"}],"author":"TiffanyLi"},{"title":"修正模型：減少模型Overfitting","slug":"20211012-2","date":"2021-10-11T16:00:00.000Z","updated":"2021-11-12T09:10:30.453Z","comments":true,"path":"2021/10/12/20211012-2/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/10/12/20211012-2/","excerpt":"在搭載神經元網絡開始訓練模型同時，可能會面臨平常都執行得好好的，為何在評估資料時卻沒有達到預期效果？ 你可能面臨了『過度配適』（Overfitting)，當模型過度擬合的同時，無法同時達到模型最佳化以及泛化（Generalization).這也是個常見的補償現象。","text":"在搭載神經元網絡開始訓練模型同時，可能會面臨平常都執行得好好的，為何在評估資料時卻沒有達到預期效果？ 你可能面臨了『過度配適』（Overfitting)，當模型過度擬合的同時，無法同時達到模型最佳化以及泛化（Generalization).這也是個常見的補償現象。 如果你的模型過度擬合訓練資料（train data)，可以試著降低模型彈性，像是： 特徵選擇：考慮使用較少的特徵組合、減少 n 元語法的大小，以及減少數值屬性分箱數。 增加使用的正規化數量(Normalization&#x2F;Regularization)","categories":[{"name":"Learning","slug":"Learning","permalink":"https://yunchenli.github.io/hexotestsite/categories/Learning/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://yunchenli.github.io/hexotestsite/tags/Python/"},{"name":"Deep learning","slug":"Deep-learning","permalink":"https://yunchenli.github.io/hexotestsite/tags/Deep-learning/"},{"name":"Machine learning","slug":"Machine-learning","permalink":"https://yunchenli.github.io/hexotestsite/tags/Machine-learning/"}],"author":"TiffanyLi"},{"title":"淺談製造業的雲端整合發展","slug":"20211005","date":"2021-10-03T16:00:00.000Z","updated":"2021-11-12T09:10:20.738Z","comments":true,"path":"2021/10/04/20211005/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/10/04/20211005/","excerpt":"前言：台灣產業生態是否還停留在工業2.0?這篇專注在工業4.0的發展，撇除近幾年衍生的工業5.0強調人機互動的發展模式。我先來聊聊目前在工廠端更著重的物聯網型態。","text":"前言：台灣產業生態是否還停留在工業2.0?這篇專注在工業4.0的發展，撇除近幾年衍生的工業5.0強調人機互動的發展模式。我先來聊聊目前在工廠端更著重的物聯網型態。 引用wiki定義的工業4.0 1產業經濟創新包括建構出一個有智能意識的產業世界，發展具備有適應性、資源效率、人機協同工程的智慧工廠，以貫穿供應鏈夥伴流程及企業價值流程，創造產品服務化與客製化的供應能力。 有點文言但沒關係，換個角度思考就是工業4.0是透過IoT、感測器、機器人與智慧系統來實現轉型，讓製造流程最優化，將傳統工廠從自動化中進行數位轉型。 智慧工廠的組成如何落實？我們將原本自動化工業程序加入生產支援系統，稱為CIM(Computer integrated manufacturing)，電腦整合製造，甚至有些半導體產業會有CIM單位，負責製造部的IT support, 包含開發&#x2F;maintain manufactiring execution system（MES), 設計跨部門專案的系統架構，製造相關的IT solutions…等。 ERP -&gt; MES -&gt; SCADA -&gt; PLC -&gt; Sensors ERP(Entreprise Resources Planning):管理會計、採購、專案管理、生產的系統。MES(Manufacturing Execution System):製造執行系統，管理生產流程，包含訂單管理、原物料管控等。SCADA(Supervisory Control and Data Acquisition): 監控程式及資料收集系統，包含偵測流程是否異常、收集來自PLC或感測器傳來的信息。PLC(Programmable Logic Controller):處理來自感測器的輸入信號，輸出信號至致動器控制設備。","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"IT","slug":"IT","permalink":"https://yunchenli.github.io/hexotestsite/tags/IT/"},{"name":"Industry 4.0","slug":"Industry-4-0","permalink":"https://yunchenli.github.io/hexotestsite/tags/Industry-4-0/"},{"name":"Cloud integration","slug":"Cloud-integration","permalink":"https://yunchenli.github.io/hexotestsite/tags/Cloud-integration/"}],"author":"TiffanyLi"},{"title":"如何產出Project／Product Roadmap?","slug":"20210929","date":"2021-09-28T16:00:00.000Z","updated":"2021-11-12T08:29:05.497Z","comments":true,"path":"2021/09/29/20210929/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/09/29/20210929/","excerpt":"剛接觸專案管理的時候我很confuse什麼是project roadmap而product and project roadmap差別在哪裡？就學期間只知道利用roadmap心智圖來釐清脈絡，了解專案的涵蓋範圍以及方向\b 專案地圖 Project roadmap: 專案的總覽，考量專案的短中長期目標和專案可行性在公司願景的相對位置 產品地圖 Product roadmap: 目的是指出產品目前在公司定位中相對位置，包含了產品願景（Product vision）、業務目標（Objectives）、時限（Timeframe）、主題（Theme）、免責聲明（Disclaimer），是產品願景和公司業務目標之間的距離，因此我們通常會用一條時間軸，再加上幾個重要的產品要素來組成，進而達成組織的目標。 共通點：roadmap是用來釐清方向而不是做進度追蹤","text":"剛接觸專案管理的時候我很confuse什麼是project roadmap而product and project roadmap差別在哪裡？就學期間只知道利用roadmap心智圖來釐清脈絡，了解專案的涵蓋範圍以及方向\b 專案地圖 Project roadmap: 專案的總覽，考量專案的短中長期目標和專案可行性在公司願景的相對位置 產品地圖 Product roadmap: 目的是指出產品目前在公司定位中相對位置，包含了產品願景（Product vision）、業務目標（Objectives）、時限（Timeframe）、主題（Theme）、免責聲明（Disclaimer），是產品願景和公司業務目標之間的距離，因此我們通常會用一條時間軸，再加上幾個重要的產品要素來組成，進而達成組織的目標。 共通點：roadmap是用來釐清方向而不是做進度追蹤 不管專案或是產品的roadmap都是以月&#x2F;季度或年度來規劃一個大方向的專案&#x2F;產品走向，像是Q1, 2021。假設此專案為新產品導入(NPI)，可知時間軸可以針對 EVT : Engineering Verification Test (工程驗證測試階段) DVT: Design Verification Test (設計驗證測試階段) PVT: Production Verification Test(生產驗證測試階段)這幾個階段與專案預期在各階段達到的目標做設定，當然並非所有的產品導入都只有一個phase, 換句話說，你可能也聽過EVT1, EVT2… 瞭解了roadmap的角色定位後，接下來就是roadmap呈現的部分：以下統整市場常用的roadmap方式，都是以不同的方向去定位產品。 Now-next-later roadmap:分三個解段，大致可以理解為短\b（now)，中(next)，長期(later)。 Goal-Oriented roadmap:目標導向的，像是以優化產線（目標設定提生產線效能30%）或是降低成本（藉由導入自動化系統減少作業繁雜等）作為產出roadmap的評估方向。 Theme-based roadmap：跟目標導向的分類方式很像，但是以不同計畫主題分類，像是研發計畫、工廠營運等。 Feature-based roadmap：依據產品功能分類，像是自駕功能擴充、環景輔助系統等。 Strategy roadmap：面向相對比較大，看的也比其他roadmap考量的點多，像是市佔率達到多少以上、總融資基金超越多少、企業合作計畫等。 Technology roadmap：從技術的角度來展開roadmap，只適用於技術含量較高的產品。 Release roadmap：比較偏向版本升級等。 Outcome-based roadmap：結果導向的roadmap面對產品該解決的問題切入，像是成本過高、流程不順暢。 眼花撩亂的roadmap方式，可以針對產品或專案的性質選擇適合的roadmap，幫助釐清目標方向，更具體化專案&#x2F;產品需求。 Project roadmap vs Product roadmap 兩者的差異：Project roadmaps often include these types of components: Project goals and objectives Important milestones and tasks Resource allocation Project timeline Potential risks Product roadmaps often include the following types of components: Product goals Strategic initiatives Key releases and features that deliver on the goals Master features (or epics) Major users stories or features Overall timeline 更多詳細的roadmap介紹也可以參考The Product Roadmap vs. the Project Roadmap以及roadmap template 整體來說，product roadmap的主要目的在溝通，切記不要list一堆太遠大的項目，盡量以產品&#x2F;專案在光司的相對位置思考，以免建立一個模糊無效的roadmap。","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Project management","slug":"Project-management","permalink":"https://yunchenli.github.io/hexotestsite/tags/Project-management/"},{"name":"Roadmap","slug":"Roadmap","permalink":"https://yunchenli.github.io/hexotestsite/tags/Roadmap/"},{"name":"Product management","slug":"Product-management","permalink":"https://yunchenli.github.io/hexotestsite/tags/Product-management/"}],"author":"TiffanyLi"},{"title":"職場迷思 - 轉換工作的心態調整","slug":"20210927-2","date":"2021-09-26T16:00:00.000Z","updated":"2021-11-12T09:09:59.671Z","comments":true,"path":"2021/09/27/20210927-2/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/09/27/20210927-2/","excerpt":"短短五年時間我換了三個工作，其實我在工作時的理想是能在特定公司待上兩年以上，原因是因為前輩（學長姐們）都說工作兩年才是真正學到東西，以後找下份工作也比較容易，主管或人資會衡量工作的穩定性blablabla 然而事與願違，真正經歷後才發現每個選擇都有它背後的意義以及待超過兩年以上已經不再是golden standard.(黃金標準)","text":"短短五年時間我換了三個工作，其實我在工作時的理想是能在特定公司待上兩年以上，原因是因為前輩（學長姐們）都說工作兩年才是真正學到東西，以後找下份工作也比較容易，主管或人資會衡量工作的穩定性blablabla 然而事與願違，真正經歷後才發現每個選擇都有它背後的意義以及待超過兩年以上已經不再是golden standard.(黃金標準) 首先，探索時期別怕換工作也別因為年紀限制了自己我29歲這年面試，主管問：你年紀差不多了（夠老？），應該沒機會再換工作了\b，在這邊會待很久吧？有結婚的打算嗎？會生小孩嗎？等我覺得性別不尊重的問題\b。 這是一個一畢業就在這間公司服務，沒有轉職經驗的主管向我提問（大學畢業，工作9-10年，從工程師晉升小主管）。 整個面試圍繞在我年齡的議題以及是否有結婚打算，老實說，uncomfortable… 但我評估了工作內容，潛力，以及未來發展還是on-board了，畢竟我覺得我的工作跟這位主管沒有太大接觸等等。 面試結束後我還是認真思考了年齡跟轉職的問題，首先歸類以下幾個面向分析： 自身能力 - 企業是愛人才的，可以為公司創造價值。當有突出能力時，沒有公司會拒絕人才 公司企業文化 - 對於適婚年齡的接受度，如果非以刻板印象把適婚年齡者當成是公司招募人才的負資產 主管的價值觀 - 排除性別歧視以及年齡刻板印象，而是更著重於員工的工作能力 所以，不要因為年紀限制自己找工作的權力。因為能力者值得更好，也值得被尊重。 然後，了解自己要的是什麼，不要委曲求全幾年下來遇到很多‘前’同事做得不開心卻一直留在‘前’公司。大部分都是『鴕鳥心態』總覺得薪水可以接受，穩定，雖然工作不開心但忍一忍就過了。 老實說，我也曾有過鴕鳥心態，會發現是因為每天上班只想賴床，身體在動，但心態還沒準備好一天的開始。 當我意識到這種行為的時候，我害怕了。開始反思這跟行屍走肉有什麼區別？每天以得過且過的心態去應付工作已經不是工作，而是奴役。如果你也意識到每天無法很有精神的迎接工作，then it’s time to figure out why 了解自己要的是什麼，用positive的心態迎接工作，這樣工作才能激發創造力也更長久。 最後，不怕探索期，多給自己機會去尋找，多充實自己的軟硬實力","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Sharing","slug":"Sharing","permalink":"https://yunchenli.github.io/hexotestsite/tags/Sharing/"}],"author":"TiffanyLi"},{"title":"怎麼樣做出易懂又多功能的排程表 - Part1","slug":"20210927","date":"2021-09-26T16:00:00.000Z","updated":"2021-11-12T09:10:10.547Z","comments":true,"path":"2021/09/27/20210927/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/09/27/20210927/","excerpt":"市面上很多可以排程的工具，所謂的排程我喜歡把它分為 1. Time schedule(關於專案時間的排序以利進度的追蹤) 2. File management(專案進行中的檔案&#x2F;文件管理) 3. Task&#x2F;Issue management(專案To do list及任務管理) 非PMP，單純分享工作經驗","text":"市面上很多可以排程的工具，所謂的排程我喜歡把它分為 1. Time schedule(關於專案時間的排序以利進度的追蹤) 2. File management(專案進行中的檔案&#x2F;文件管理) 3. Task&#x2F;Issue management(專案To do list及任務管理) 非PMP，單純分享工作經驗 以下會針對我實際在職場上運用到的工具做分享，當然還有很多專案管理相關的工具可以探索，找到適合自己的管理工具可以大幅提升工作效率 ** 首先，在專案的控管包含Plan, Track, Release, Report Micorsoft Project Microsoft Excel Gantter Redmine Trello Jira","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Project management","slug":"Project-management","permalink":"https://yunchenli.github.io/hexotestsite/tags/Project-management/"},{"name":"Data visualization","slug":"Data-visualization","permalink":"https://yunchenli.github.io/hexotestsite/tags/Data-visualization/"},{"name":"ChromeOS","slug":"ChromeOS","permalink":"https://yunchenli.github.io/hexotestsite/tags/ChromeOS/"},{"name":"Excel","slug":"Excel","permalink":"https://yunchenli.github.io/hexotestsite/tags/Excel/"}],"author":"TiffanyLi"},{"title":"實作BigQuery and SQL","slug":"20210924","date":"2021-09-23T16:00:00.000Z","updated":"2021-11-12T08:26:36.897Z","comments":true,"path":"2021/09/24/20210924/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/09/24/20210924/","excerpt":"繼之前 常用的SQL Parsing - Part1 and 常用的SQL Parsing - Part2的簡單介紹，讓我們get hands dirty, 實際運用Bigquey and SQL 利用BigQuery來train SQL skill","text":"繼之前 常用的SQL Parsing - Part1 and 常用的SQL Parsing - Part2的簡單介紹，讓我們get hands dirty, 實際運用Bigquey and SQL 利用BigQuery來train SQL skill 首先，先載入Python package -&gt; ready to run BigQuery1from google.cloud import bigquery","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"System integration","slug":"System-integration","permalink":"https://yunchenli.github.io/hexotestsite/tags/System-integration/"},{"name":"IT","slug":"IT","permalink":"https://yunchenli.github.io/hexotestsite/tags/IT/"},{"name":"SQL","slug":"SQL","permalink":"https://yunchenli.github.io/hexotestsite/tags/SQL/"},{"name":"BigQuery","slug":"BigQuery","permalink":"https://yunchenli.github.io/hexotestsite/tags/BigQuery/"}],"author":"TiffanyLi"},{"title":"常用的SQL Parsing - Part2","slug":"20210923","date":"2021-09-22T16:00:00.000Z","updated":"2021-11-12T09:11:35.374Z","comments":true,"path":"2021/09/23/20210923/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/09/23/20210923/","excerpt":"繼之前 常用的SQL Parsing - Part1的簡單介紹，知道怎麼創建database and table，這篇文章接著協助大家create column and row Background: 怎麼有效應用columns&#x2F;rows Command line: How to create&#x2F;remove&#x2F;drop&#x2F;delete columns&#x2F;rows?","text":"繼之前 常用的SQL Parsing - Part1的簡單介紹，知道怎麼創建database and table，這篇文章接著協助大家create column and row Background: 怎麼有效應用columns&#x2F;rows Command line: How to create&#x2F;remove&#x2F;drop&#x2F;delete columns&#x2F;rows? 善用＊(star mark)隨時掌握table資訊 1SELECT * from `student`; 新增&#x2F;移除column(ex: gpa) ALTER TABLE &lt;*table name*&gt; ADD&#x2F;DROP &lt;*column name*&gt; ALTER TABLE student ADD gpa DECIMAL(3, 2);ALTER TABLE student DROP COLUMN gpa; 加入table內數值 INSERT INTO student VALUES(3, ‘小綠’, NULL);INSERT INTO student(name,major,student_id) VALUES(‘小藍’, ‘英文’, 4); 替代文字(Replace)1234設定主修是英文的都改成英語文學UPDATE `student`SET `major` = &quot;英語文學&quot;where `major` = &quot;英文&quot;; 指定狀態下替代文字(Replace under certain phonomenon)設定只要學號是3都是主修生物 123UPDATE `student`SET `major` = “生物&quot;where `student_id` = 3; 刪除12DELETE FROM `student`WHERE `name` = &quot;小白&quot; AND `major` = &quot;歷史&quot;; 排序1ORDER BY DESC/ASC(default) 設定顯示數量1LIMIT 3; #only the first 3 items 補上少設定的foreign key123456789ALTER TABLE `Employee`ADD FOREIGN KEY(`branch_id`)REFERENCES `branch`(`branch_id`)ON DELETE SET NULL;ALTER TABLE `Employee`ADD FOREIGN KEY(`sup_id`)REFERENCES `Employee`(`emp_id`)ON DELETE SET NULL; CREATE TABLE client( client_id INT PRIMARY KEY, client_name VARCHAR(20), phone VARCHAR(20)); CREATE TABLE works_with( emp_id INT, client_idf INT, total_sales INT, PRIMARY KEY(emp_id, client_id), FOREIGN KEY (emp_id) REFERENCES Employee(emp_id) ON DELETE CASCADE, FOREIGN KEY (client_id) REFERENCES client(client_id) ON DELETE CASCADE); CREATE TABLE works_with( emp_id INT, client_id INT, total_sales INT, PRIMARY KEY(emp_id, client_id), FOREIGN KEY (emp_id) REFERENCES Employee(emp_id) ON DELETE CASCADE, FOREIGN KEY (client_id) REFERENCES client(client_id) ON DELETE CASCADE); create all the tables and let’s fill in the data先新增部門資料先設定manager id&#x3D;null再新增員工資料並改回manager idINSERT INTO branch VALUES(1, ‘研發’ , NULL);INSERT INTO branch VALUES(2, ‘行政’ , NULL);INSERT INTO branch VALUES(3, ‘資訊’ , NULL); ##新增員工資料INSERT INTO Employee VALUES(206, ‘小黃’ , ‘1998-10-08’, ‘F’, 50000, 1, NULL);INSERT INTO Employee VALUES(207, ‘小綠’ , ‘1985-09-16’, ‘M’, 29000, 1, 206);INSERT INTO Employee VALUES(208, ‘小黑’ , ‘2000-12-19’, ‘M’, 35000, 1, 206);INSERT INTO Employee VALUES(209, ‘小白’ , ‘1997-01-22’, ‘F’, 39000, 1, 207);INSERT INTO Employee VALUES(210, ‘小蘭’ , ‘1925-11-10’, ‘F’, 84000, 1, 207); ##在修改manager_id UPDATE branchSET manager_id &#x3D; 206WHERE branch_id &#x3D; 1; select name from Employee ;select DISTINCT branch_id from Employee ; SELECT COUNT(*)FROM Employee; select * from Employee ORDER BY salary DESC LIMIT 3;select * from client;select * from works_with; select name from Employee ;select DISTINCT branch_id from Employee ; SELECT COUNT(sup_id)FROM Employee; SELECT COUNT(*) FROM Employee WHERE birth_date &gt; ‘1970-01-01’ AND sex &#x3D; ‘F’; SELECT AVG(salary) FROM Employee;SELECT SUM(salary) FROM Employee;SELECT MAX(salary) FROM Employee; #max&#x2F;min SELECT * FROM client WHERE phone like ‘%22’; #% like SELECT * FROM Employee WHERE birth_date LIKE ‘_____12%’; #_字元 unionSELECT nameFROM EmployeeUNIONㄋㄋSELECT client_nameFROM clientUNIONSELECT branch_nameFROM branch; AS 命名asSELECT salary AS MONEYFROM EmployeeUNIONSELECT total_salesFROM works_with; 連接員工表格跟部門表格SELECT *FROM EmployeeJOIN branchON emp_id &#x3D; manager_id; SELECT *FROM EmployeeJOIN branchON Employee.emp_id &#x3D; branch.manager_id; 不同的連接方式left join&#x2F;right join SELECT *FROM Employee LEFT JOIN branchON emp_id &#x3D; manager_id;","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"System integration","slug":"System-integration","permalink":"https://yunchenli.github.io/hexotestsite/tags/System-integration/"},{"name":"IT","slug":"IT","permalink":"https://yunchenli.github.io/hexotestsite/tags/IT/"},{"name":"SQL","slug":"SQL","permalink":"https://yunchenli.github.io/hexotestsite/tags/SQL/"}],"author":"TiffanyLi"},{"title":"維修站工程師都在幹嘛？深入RMA Process","slug":"20210916","date":"2021-09-15T16:00:00.000Z","updated":"2021-11-12T09:11:25.964Z","comments":true,"path":"2021/09/16/20210916/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/09/16/20210916/","excerpt":"消費者在保固期間內返修電腦到原廠維修站，我們稱RMA(Return Merchandise Authorization) Definition（from wiki):A return merchandise authorization (RMA), return authorization (RA) or return goods authorization (RGA) is a part of the process of returning a product to receive a refund, replacement, or repair during the product’s warranty period. Both parties can decide how to deal with it, which could be refund, replacement or repair.","text":"消費者在保固期間內返修電腦到原廠維修站，我們稱RMA(Return Merchandise Authorization) Definition（from wiki):A return merchandise authorization (RMA), return authorization (RA) or return goods authorization (RGA) is a part of the process of returning a product to receive a refund, replacement, or repair during the product’s warranty period. Both parties can decide how to deal with it, which could be refund, replacement or repair. RMA ShimThe RMA shim image is designed to meet these requirements. An RMA shim image is a combination of existing Chrome OS factory bundle components, all combined into one disk, including: Factory install shim Release image (FSI) Test image Factory toolkit HWID bundle Other optional components (firmware, complete script, etc.) Troubleshooting process Clarify and define problems or causes - Impact scope, Project, Video or Pic attached?, 5W1H…Deliver message to right functional team by service groupTesting with dummy devicesFile the issue and highlight if we have to apply new change on new firmware versionCheck schedule with Google about software release date and have internal discussion to meet stable cut date or branch out dateFAFT(Functional testing) with firmware changeApply the latest version on production line with some units and run with at least 200 units after thenFormal release to customers","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://yunchenli.github.io/hexotestsite/tags/Linux/"},{"name":"Toolkit","slug":"Toolkit","permalink":"https://yunchenli.github.io/hexotestsite/tags/Toolkit/"},{"name":"ChromeOS","slug":"ChromeOS","permalink":"https://yunchenli.github.io/hexotestsite/tags/ChromeOS/"},{"name":"RMA","slug":"RMA","permalink":"https://yunchenli.github.io/hexotestsite/tags/RMA/"},{"name":"Process flow","slug":"Process-flow","permalink":"https://yunchenli.github.io/hexotestsite/tags/Process-flow/"}],"author":"TiffanyLi"},{"title":"About Tensorflow Fundamental_1","slug":"20210914-1","date":"2021-09-13T16:00:00.000Z","updated":"2021-11-12T09:10:59.118Z","comments":true,"path":"2021/09/14/20210914-1/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/09/14/20210914-1/","excerpt":"In this norebook, we’re going to cover some of the most fundamental concepts using Tensorflow. More specifically, we’re going to cover: Introduction to tensors Getting information from tensors Manipulating tensors Tensors &amp; Numpy Using @ Using GPUs with TF","text":"In this norebook, we’re going to cover some of the most fundamental concepts using Tensorflow. More specifically, we’re going to cover: Introduction to tensors Getting information from tensors Manipulating tensors Tensors &amp; Numpy Using @ Using GPUs with TF Import Tensorflow12import tensorflow as tfprint(tf.__version__) Tensorflow 包含了一維，二維，三維，多維 scalaervectormatrix 1234567891011## check the number of dimensions of a tensor (ndim stands for number of dimensions)scalar.ndim## Create a vectorvector = tf.constant([10, 10])vector## Create a matrix (has more than 1 dimension)matrix = tf.constant([[10, 7], [7, 10]])matrix 12345678# Let&#x27;s create a tensortensor = tf.constant([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]], [[13, 14, 15], [16, 17, 18]]])tensor","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://yunchenli.github.io/hexotestsite/tags/Python/"},{"name":"Tensorflow","slug":"Tensorflow","permalink":"https://yunchenli.github.io/hexotestsite/tags/Tensorflow/"}],"author":"TiffanyLi"},{"title":"實作Number Detection","slug":"20210914","date":"2021-09-13T16:00:00.000Z","updated":"2022-03-14T10:58:01.778Z","comments":true,"path":"2021/09/14/20210914/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/09/14/20210914/","excerpt":"本篇介紹簡易的number detection 實作資料庫：mnist 12345678import numpy as npfrom keras.models import Sequentialfrom keras.datasets import mnistfrom keras.layers import Dense, Dropout, Activation, Flattenfrom keras.utils import np_utils #用來後續將label標籤轉換為one-hot-encodingfrom matplotlib import pyplot as plt#載入mnist 資料庫訓練資料，並自動分為 訓練組 以及 測試組(X_train, y_train), (X_test, y_test) = mnist.load_data() Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz 11493376&#x2F;11490434 [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] - 0s 0us&#x2F;step 11501568&#x2F;11490434 [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] - 0s 0us&#x2F;step","text":"本篇介紹簡易的number detection 實作資料庫：mnist 12345678import numpy as npfrom keras.models import Sequentialfrom keras.datasets import mnistfrom keras.layers import Dense, Dropout, Activation, Flattenfrom keras.utils import np_utils #用來後續將label標籤轉換為one-hot-encodingfrom matplotlib import pyplot as plt#載入mnist 資料庫訓練資料，並自動分為 訓練組 以及 測試組(X_train, y_train), (X_test, y_test) = mnist.load_data() Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz 11493376&#x2F;11490434 [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] - 0s 0us&#x2F;step 11501568&#x2F;11490434 [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] - 0s 0us&#x2F;step 123456789101112131415161718192021222324252627282930313233343536373839404142434445from keras import models from keras import layers#建立簡單的建模model = Sequential()#add input layer, 隱藏層(hidden layer)(通常超過兩層的hidden layers就是深度學習)有256個變數#model.add(layers.Dense(512, activation = &#x27;relu&#x27;, imput_shape=(28*28,)))model.add(Dense(units = 256, input_dim=784, kernel_initializer=&#x27;normal&#x27;, activation=&#x27;relu&#x27;))#Add output layer#model.add(layer.Dense(10, activation = &#x27;softmax))model.add(Dense(units=10, kernel_initializer=&#x27;normal&#x27;, activation=&#x27;softmax&#x27;))#activation function: 非線性函數（像是sigmoid適合使用二分法在[0,1]之間 中間只有一小段模糊地帶適用於二分法#activation function: softmax 可以將Ｙ轉為機率值 且所有類別機率值為1, #選擇loss function優化方法跟成效衡量方式 #以上已經有兩層Ｄense layers, 還需再加上以下進行編譯complilation#optimizer = &#x27;rmsprop&#x27;, &#x27;adam&#x27;model.compile(loss = &#x27;categorical_crossentropy&#x27;, optimizer = &#x27;rmsprop&#x27;, metrics = [&#x27;accuracy&#x27;])#將training的label進行 one-hot-encoding, convert number to one-hot-encoding(像是7轉化one-hot-encofing會變成0000001000, 第7個數字會是1)y_TrainOneHot = np_utils.to_categorical(y_train)y_TestOneHot = np_utils.to_categorical(y_test)#將training的input轉為2維(28,28)-&gt;(28*28)X_train_2D = X_train.reshape(60000, 28*28).astype(&#x27;float32&#x27;)X_test_2D = X_test.reshape(10000, 28*28).astype(&#x27;float32&#x27;)X_train_norm = X_train_2D/255X_test_norm = X_test_2D/255#進行訓練，訓練過程會存在train history變數中train_history = model.fit(x=X_train_norm, y=y_TrainOneHot, validation_split = 0.2, epochs = 10, batch_size=800, verbose=2)#訓練成果(分數)scores = model.evaluate(X_test_norm, y_TestOneHot)print(&quot;\\t[info]Accuracy of testing data = &#123;:2.1f&#125;%&quot;.format(scores[1]*100.0))#Scores(測試集的準確率)比訓練資料準確率低一點，中間的差距就是過度配適（overfitting)#預測X = X_test_norm[0:10,:]predictions = model.predict(X)#get prediction resultprint(predictions) 12plt.imshow(X_test[1])plt.show()","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://yunchenli.github.io/hexotestsite/tags/Python/"},{"name":"Data visualization","slug":"Data-visualization","permalink":"https://yunchenli.github.io/hexotestsite/tags/Data-visualization/"}],"author":"TiffanyLi"},{"title":"常見Error當導入MySQL Workbench","slug":"20210915","date":"2021-09-13T16:00:00.000Z","updated":"2021-11-12T09:11:17.491Z","comments":true,"path":"2021/09/14/20210915/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/09/14/20210915/","excerpt":"出現錯誤：error code:1366. incorrect string value","text":"出現錯誤：error code:1366. incorrect string value Condition: 如果執行1ALTER TABLE `student` default character set utf8; #utf8mb4 格式一可能沒變，一樣是latin1 Solution: you can run the following code to check it again.輸入以下指令，設定格式latin1為 utf812ALTER TABLE `student` convert to character set utf8; #utf8mb4show create table `student`;","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://yunchenli.github.io/hexotestsite/tags/Python/"},{"name":"Data visualization","slug":"Data-visualization","permalink":"https://yunchenli.github.io/hexotestsite/tags/Data-visualization/"}],"author":"TiffanyLi"},{"title":"常用的SQL Parsing - Part1","slug":"20210913","date":"2021-09-12T16:00:00.000Z","updated":"2021-11-12T09:09:48.122Z","comments":true,"path":"2021/09/13/20210913/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/09/13/20210913/","excerpt":"我們理解的資料庫就是儲存資料的地方，而資料庫本身也區分為 關聯式資料庫 和 非關聯式資料庫 關聯式資料庫（SQL - Structured Query Language)可以想成常見的rows&#x2F;columns組成的table，包含了MySQL, Oracle, PostgreSQL… 非關聯式資料庫（no SQL) 可以想成儲存方式非一般的資料型態，像是以圖片的方式儲存或是key的方式儲存，包含MongoSQL, Redis…","text":"我們理解的資料庫就是儲存資料的地方，而資料庫本身也區分為 關聯式資料庫 和 非關聯式資料庫 關聯式資料庫（SQL - Structured Query Language)可以想成常見的rows&#x2F;columns組成的table，包含了MySQL, Oracle, PostgreSQL… 非關聯式資料庫（no SQL) 可以想成儲存方式非一般的資料型態，像是以圖片的方式儲存或是key的方式儲存，包含MongoSQL, Redis… Background: 大小寫都可 關鍵字文字顏色會變成藍色 Command line: How to create&#x2F;remove&#x2F;drop&#x2F;delete database? How to create&#x2F;remove&#x2F;drop&#x2F;delete table? Database Key points: use ‘;’ at every sentence CREATE DATABASE;CREATE DATABASE sql_Qual; 避免與關鍵字搞混衝突 可以把命名名稱用反引號包起來DROP DATABASE sql_Qual; (刪除database)USE sql_Qual; (指定使用特定資料庫)SHOW DATABASES Table首先先來聊聊資料型態的應用，以下常見資料型態有助於資料設定 常用資料型態： - INT 整數 - DECIMAL(3, 2) 2.33 小數點 - VARCHAR(n) 字串 - BLOB （binary large object)存放二進制資料 像是圖片… - DATE – yyyy-mm-dd - TIMESTAMP – yyyy-mm-dd hh:mm:ss 接下來，建立table 方法一：CREATE TABLE student( student_id INT PRIMARY KEY, name VARCHAR(20) NOT NULL, #not null major VARCHAR(20) UNIQUE #no duplicate);方法二：CREATE TABLE student( student_id INT auto_increment, #auto_increment 會自動加一 帶入 name VARCHAR(20), major VARCHAR(20) DEFAULT history #會自動帶入歷史，不用額外設定 PRIMARY KEY(student_id )); DESCRIBE student; (check table) 簡單的創建database and table能有效訓數搭建所需的資料性質協助測試接下來會進一步介紹如何做columns and rows的變換","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"System integration","slug":"System-integration","permalink":"https://yunchenli.github.io/hexotestsite/tags/System-integration/"},{"name":"IT","slug":"IT","permalink":"https://yunchenli.github.io/hexotestsite/tags/IT/"},{"name":"SQL","slug":"SQL","permalink":"https://yunchenli.github.io/hexotestsite/tags/SQL/"}],"author":"TiffanyLi"},{"title":"QC Tooling Sharing","slug":"0906","date":"2021-09-05T16:00:00.000Z","updated":"2021-11-12T09:12:14.237Z","comments":true,"path":"2021/09/06/0906/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/09/06/0906/","excerpt":"","text":"What you’ll experiece in quality control? QC tooling: 8D, MSA, Ishikawa, PDCA, SPC, quality testing (heat soak testing) In the following session, I’ll bring you to some of quality control method which ofen used in production line.","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Quality management","slug":"Quality-management","permalink":"https://yunchenli.github.io/hexotestsite/tags/Quality-management/"},{"name":"Project management","slug":"Project-management","permalink":"https://yunchenli.github.io/hexotestsite/tags/Project-management/"}],"author":"TiffanyLi"},{"title":"Fabless公司資料流大架構分享","slug":"0902","date":"2021-09-01T16:00:00.000Z","updated":"2021-11-12T09:12:23.589Z","comments":true,"path":"2021/09/02/0902/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/09/02/0902/","excerpt":"沒有自家工廠的IC設計廠會在suppliers(SATs)端的機台安裝Proxy收集機台資料 Proxy: 一個代理的角色，連接客戶端與伺服器（簡單來說就是透過代理的角色去取得客戶端的資料） Proxy Server: 顧名思義就是代理伺服器","text":"沒有自家工廠的IC設計廠會在suppliers(SATs)端的機台安裝Proxy收集機台資料 Proxy: 一個代理的角色，連接客戶端與伺服器（簡單來說就是透過代理的角色去取得客戶端的資料） Proxy Server: 顧名思義就是代理伺服器 當收集好的資料會經過supplier廠內防火牆(Firewall)以及fabless的防火牆(Firewall)進入到fabless的database(ex: Hadoop, Vertica…)，通常超過三個月的測試資料會歸類到Hadoop(我們稱之為Cold data）而測試資料如果在三個月內則會歸類到Vertica(我們稱為Hot data) Hadoop(Apache Hadoop Ecosystem)可以儲存並管理大量資料的雲端平台(Hadoop Distributed File System(HDFS)) Vertica for sql on Hadoop 因此我們可以利用SQL Parsing 所需的資料進行Wafer的良率分析 請參考我的另一篇用SQL抓取資料分享文章","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"System integration","slug":"System-integration","permalink":"https://yunchenli.github.io/hexotestsite/tags/System-integration/"},{"name":"Data flow","slug":"Data-flow","permalink":"https://yunchenli.github.io/hexotestsite/tags/Data-flow/"},{"name":"IT","slug":"IT","permalink":"https://yunchenli.github.io/hexotestsite/tags/IT/"}],"author":"TiffanyLi"},{"title":"如何有效建立網頁(Hexo, Github)","slug":"My-Gallery","date":"2021-08-31T16:00:00.000Z","updated":"2022-03-14T11:07:41.295Z","comments":true,"path":"2021/09/01/My-Gallery/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/09/01/My-Gallery/","excerpt":"第一次接觸hexo建議先把相關的package安裝好，也可以參考官網有完整的docs https://hexo.io/docs/ 安裝Git- Windows: Download &amp; install git. - Mac: Install it with *Homebrew* , MacPorts or installer. - Linux (Ubuntu, Debian): sudo apt-get install git-core - Linux (Fedora, Red Hat, CentOS): sudo yum install git-core __Note: Homebrew 開放原始碼的軟體套件管理系統，用以簡化 macOS 系統上的軟體安裝過程(from Wiki)","text":"第一次接觸hexo建議先把相關的package安裝好，也可以參考官網有完整的docs https://hexo.io/docs/ 安裝Git- Windows: Download &amp; install git. - Mac: Install it with *Homebrew* , MacPorts or installer. - Linux (Ubuntu, Debian): sudo apt-get install git-core - Linux (Fedora, Red Hat, CentOS): sudo yum install git-core __Note: Homebrew 開放原始碼的軟體套件管理系統，用以簡化 macOS 系統上的軟體安裝過程(from Wiki) 安裝Hexo with npm Tool: 開啟 CLI 介面（例如 cmd、git-bash 等終端機），並輸入下列指令安裝 Hexo： npm install -g hexo-cli 安裝完可以輸入版本確認，douuble confirm 是否已經安裝完成 hexo version (or hexo -v) 初始化 Hexo可以直接在終端機(terminal)下指令也可以先建立好資料夾 (Under terminal) hexo init 資料夾名稱 如果已經建立好資料夾，請切換路徑到指定資料夾底下 cd 資料夾名稱 接下來打開資料夾後就可以開始編輯內容在指定資料夾內會有 _config.yml scaffolds 模板 themes source: _drafts _posts: 資料夾內的每個md記錄每篇更新(包含Markdown…) source那邊集完後會解析放置public, 再藉由deploy(hexo d)將內容部署至deploy_git source -&gt; public -&gt; .deploy_git 完成網頁的建立後，將內容部署到Github在Github新創一個Repository並設置為Public npm install hexo-deployer-git –save修改 _config.yml 檔案的 Deployment 設定 完成修改後，更新 clean -&gt; generate -&gt; deploy 三行指令，避免更新不完全 hexo clean (hexo cl)hexo generate (hexo g)hexo deploy (hexo d) 也可以在localhost確認 hexo server (hexo s) 以上就是整個利用Hexo建立網站並部署到Github的流程，大家可以試著實做看看 Commands: &gt;&gt; clean Remove generated files and cache. &gt;&gt; config Get or set configurations. &gt;&gt; deploy Deploy your website. &gt;&gt; generate Generate static files. &gt;&gt; help Get help on a command. &gt;&gt; init Create a new Hexo folder. &gt;&gt; list List the information of the site &gt;&gt; migrate Migrate your site from other system to Hexo. &gt;&gt; new Create a new post. (ex: hexo new post 文章名稱) &gt;&gt; publish Moves a draft post from _drafts to _posts folder. &gt;&gt; render Render files with renderer plugins. &gt;&gt; server Start the server. &gt;&gt; version Display version information.","categories":[{"name":"Learning Related","slug":"Learning-Related","permalink":"https://yunchenli.github.io/hexotestsite/categories/Learning-Related/"}],"tags":[{"name":"Hexo, Github, Web","slug":"Hexo-Github-Web","permalink":"https://yunchenli.github.io/hexotestsite/tags/Hexo-Github-Web/"}],"author":"TiffanyLi"},{"title":"面對客戶的報告呈現Tips Sharing","slug":"post-name","date":"2021-08-31T16:00:00.000Z","updated":"2021-11-12T08:38:12.119Z","comments":true,"path":"2021/09/01/post-name/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/09/01/post-name/","excerpt":"剛開始遇到客戶時可能無法抓到胃口，沒關係，我們只要抓住以下幾個重點 - 產業：半導體 - 職位：NPI Project Manager - 情境：(EVT/DVT) 需要每週跟客戶報告進度 - 背景：研發階段的進度更新以及Quality report更新 - Outline: 1. List current status(based on schedule) 2. Troubleshooting 3. Next Action","text":"剛開始遇到客戶時可能無法抓到胃口，沒關係，我們只要抓住以下幾個重點 - 產業：半導體 - 職位：NPI Project Manager - 情境：(EVT/DVT) 需要每週跟客戶報告進度 - 背景：研發階段的進度更新以及Quality report更新 - Outline: 1. List current status(based on schedule) 2. Troubleshooting 3. Next Action Step1: 列出目前進度建議用條列式的方式列出來，數據用圖表呈現 Step2: 本週遇到的問題 Define and Clarify可以使用 人、機、料、法、環（5M1E) 的方式來呈現問題的背景，一方面也可以針對5M1E來定義釐清問題 (先點出問題）問題： XXX 人：指製造產品的人員 Owner: RD department at XX Company 機：指製造產品所用的裝置 Machine: EVG 770 NT (確切型號) 料：指製造產品所使用的原材料 Glue 60% + … 法：指製造產品所使用的方法(可以列出簡易的process flow) BPR -&gt; AR coating -&gt; O2 plasma -&gt; … 環：指產品製造過程中所處的環境 Humidity 85% + … Cause and Effect背景及手法陳述完後，列出可能的原因以及影響(cause and effect) Next Actions針對每個cause and effect提出next action(**注意：再提出next action時要提供客戶清楚可能解決的時間點以及checkpoint) 整合以上兩點簡略歸納出本週重點報告，也可以有效地縮短會議時間讓客戶在短時間內一目瞭然本週進度以及遇到的痛點","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Project management","slug":"Project-management","permalink":"https://yunchenli.github.io/hexotestsite/tags/Project-management/"},{"name":"Data Visulization","slug":"Data-Visulization","permalink":"https://yunchenli.github.io/hexotestsite/tags/Data-Visulization/"},{"name":"NPI","slug":"NPI","permalink":"https://yunchenli.github.io/hexotestsite/tags/NPI/"},{"name":"Apple","slug":"Apple","permalink":"https://yunchenli.github.io/hexotestsite/tags/Apple/"},{"name":"Quality","slug":"Quality","permalink":"https://yunchenli.github.io/hexotestsite/tags/Quality/"},{"name":"PPT","slug":"PPT","permalink":"https://yunchenli.github.io/hexotestsite/tags/PPT/"}],"author":"TiffanyLi"},{"title":"安裝MySQL遇到的問題(MAC)","slug":"post-title-2","date":"2021-08-31T16:00:00.000Z","updated":"2021-11-12T09:11:54.413Z","comments":true,"path":"2021/09/01/post-title-2/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/09/01/post-title-2/","excerpt":"","text":"問題：在MAC安裝完MySQL，啟動MySQL沒反應 Solution: sudo chown -RL root:mysql &#x2F;usr&#x2F;local&#x2F;mysqlsudo chown -RL mysql:mysql usr&#x2F;local&#x2F;mysql&#x2F;datasudo &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;support-files&#x2F;mysql.server start","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"Github","slug":"Github","permalink":"https://yunchenli.github.io/hexotestsite/tags/Github/"},{"name":"Git","slug":"Git","permalink":"https://yunchenli.github.io/hexotestsite/tags/Git/"}],"author":"TiffanyLi"},{"title":"疫情下Chrombook成長與筆電背後的運作","slug":"post-title","date":"2021-08-29T16:00:00.000Z","updated":"2021-11-12T09:12:03.017Z","comments":true,"path":"2021/08/30/post-title/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/08/30/post-title/","excerpt":"前言紀錄2020–2021疫情下在筆電產業工作的心得 由於之前從未接觸過筆電產業，也因為自我的好奇心加上職涯轉職的轉捩點，誤打誤撞下進入了某外商軟體研發部門擔任軟體主管工程師。負責十六個量產Chromebook的軟體trouble-shooting以及RMA(Return Material Authorization)。大家可能會好奇量產的筆電maintainence是很stable，畢竟已經在市面上販售一段時間。其實不然，以下以軟體PM","text":"前言紀錄2020–2021疫情下在筆電產業工作的心得 由於之前從未接觸過筆電產業，也因為自我的好奇心加上職涯轉職的轉捩點，誤打誤撞下進入了某外商軟體研發部門擔任軟體主管工程師。負責十六個量產Chromebook的軟體trouble-shooting以及RMA(Return Material Authorization)。大家可能會好奇量產的筆電maintainence是很stable，畢竟已經在市面上販售一段時間。其實不然，以下以軟體PM 首先，Chromebook缺料問題嚴重Chromebook在2020及2021年大缺料，每家筆電廠都秉持著「即便追料追到爆，但手上有料也先供給毛利好的伺服器、通訊類產品，最後才輪到Chromebook，因為Chromebook的毛利相對較低」。因此，在Chromebook需求於歐美市場暴增卻又面臨缺料問題時，會衍生許多PCR&#x2F;ECR&#x2F;SCR Assessment來評估2nd source尋找缺貨的替代料。 第二點，Chromebook的軟韌體更新時程是follow Google schedule進行缺料評估同時也要確認是否能趕上Google的Firmware release date. 當軟體評估需要變更的當下，就要考慮到Google Firmware Release Date的排成，如果變更BIOS(Basic input and output system)和EC(Embedded controller)，需要在branch date之前提交變動(submit CL)並由Google review change request。如果只需更動OS layer kernel，則在Stable cut前提交變更也是經由Google review。 有關BIOS變動需提交到Google coreboot請Google人員協助review https://review.coreboot.org/q/status:open+-is:wip 有關於Google release的時間也可以到Google platform status的頁面確認 https://chromestatus.com/features/schedule 第三點，ODM韌體變更侷限關於Chromebook的韌體開發取決於Google，可以參考 https://chromium.googlesource.com/ 裡面包含了所有 Git repositories on chromium。ODM 變更Chromebook的payload部分，大部分底層kernel的code還是由Google所寫入。 當然，Chromebook生產與Windows筆電生產大不同，有關產線上的operation process以及整合先不列入這一篇的觀點分享 總結以上三點，大致描述我在這一年裡maintain Chromebook量產看到的現象，雖然根據TrendForce調查，2020年因遠距辦公與教學等宅經濟需求，使筆電出貨表現打破過去年增、減3%的低谷循環，年成長近26%，而此波強勁的需求動能也延續至2021年，預估今年出貨量將突破2.36億台，年成長率約15%。其中，因教育用筆電需求高漲所致，Chromebook將成為拉抬整體筆電市場成長的關鍵。不過隨著疫苗的普及以及各國陸續解封，值得注意的是，近期市場傳出對於下半年筆電需求減緩的雜音，主因是Chromebook低毛利的衝擊逐漸發酵所致，同時又面臨近七成Chromebook主要使用的11.6吋面板大幅漲價，以及半導體長短料等壓力，促使品牌開始調整下半年的生產占比。TrendForce預估，第三季歐美等消費需求將逐漸收斂，不過受到通路市場因低庫存的回補需求影響，仍對筆電市場存有一定支撐力道，故出貨水準將可能與第二季持平。 此外，隨著歐美各國在施打疫苗比例提升下，疫情逐漸獲得控制，因此整體市場與教育標案的需求放緩所產生的效應，至第四季才會有較明顯的影響，預估該季筆電出貨量為5,800萬台，季減3%。身在Chromebook這個產業，我能深刻體會到Chromebook毛利低換料頻繁以及軟體上的限制，都影響量產維持的不易，加上近年RMA的需求及退貨比例增加，如果Chromebook無法在生產體制改善跟加強售後服務，以主打教育低價及低規格出售的筆電市場將不復存在。或者說另一個潛在可能可以朝雲端整合來發展，期待後續Chromebook的走向。 References: https://www.eettaiwan.com/20210712nt21-2021-nb-shipment/ , https://udn.com/news/story/7240/5595839","categories":[{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"}],"tags":[{"name":"ChromeOS","slug":"ChromeOS","permalink":"https://yunchenli.github.io/hexotestsite/tags/ChromeOS/"},{"name":"RMA","slug":"RMA","permalink":"https://yunchenli.github.io/hexotestsite/tags/RMA/"},{"name":"Chromebook","slug":"Chromebook","permalink":"https://yunchenli.github.io/hexotestsite/tags/Chromebook/"}],"author":"TiffanyLi"},{"title":"Start Recording My Work and Learning Journey","slug":"post-title-1","date":"2021-08-28T16:00:00.000Z","updated":"2021-11-29T09:01:18.308Z","comments":true,"path":"2021/08/29/post-title-1/","link":"","permalink":"https://yunchenli.github.io/hexotestsite/2021/08/29/post-title-1/","excerpt":"第一篇就先簡略介紹一下我自己以及之後的文章走向。","text":"第一篇就先簡略介紹一下我自己以及之後的文章走向。 首先，關於我曾在半導體產業擔任資料工程師，隸屬於研發部門，所以經手的資料稱不上是大數據，比較像是分析研發的當中一些參數並進行產線的優化。曾在IC設計產業擔任系統分析師，隸屬支援operation team的IT，這邊的數據相對大量(包含了所有產線機台收集到的資料），工作內容包含了系統上線、內外部使用者對於系統及資料問題的troubleshooting、系統整合及優化。曾在NB產業擔任軟體主管工程師，接觸到更底層軟體開發、產線toolkit優化和前端售後維修工程師韌體知識訓練。之後文章走向以我的工作經歷分享為主，包含不同產業產線的運行模式以及如何找出產線痛點進行優化、工作上會使用到的programming languages和系統整合如何實行。 然而，工作之餘會學習不同程式語言和經營社群，也會把學習經歷以及社群作為分享題材。Great!!!第一篇就到這邊，來喝杯咖啡囉～","categories":[],"tags":[],"author":"TiffanyLi"}],"categories":[{"name":"Learning","slug":"Learning","permalink":"https://yunchenli.github.io/hexotestsite/categories/Learning/"},{"name":"Work","slug":"Learning/Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Learning/Work/"},{"name":"Work","slug":"Work","permalink":"https://yunchenli.github.io/hexotestsite/categories/Work/"},{"name":"Learning Related","slug":"Learning-Related","permalink":"https://yunchenli.github.io/hexotestsite/categories/Learning-Related/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://yunchenli.github.io/hexotestsite/tags/Linux/"},{"name":"Shell script","slug":"Shell-script","permalink":"https://yunchenli.github.io/hexotestsite/tags/Shell-script/"},{"name":"Git","slug":"Git","permalink":"https://yunchenli.github.io/hexotestsite/tags/Git/"},{"name":"Gerrit","slug":"Gerrit","permalink":"https://yunchenli.github.io/hexotestsite/tags/Gerrit/"},{"name":"Project management","slug":"Project-management","permalink":"https://yunchenli.github.io/hexotestsite/tags/Project-management/"},{"name":"Program management","slug":"Program-management","permalink":"https://yunchenli.github.io/hexotestsite/tags/Program-management/"},{"name":"Schedule","slug":"Schedule","permalink":"https://yunchenli.github.io/hexotestsite/tags/Schedule/"},{"name":"Gitfind","slug":"Gitfind","permalink":"https://yunchenli.github.io/hexotestsite/tags/Gitfind/"},{"name":"SQL","slug":"SQL","permalink":"https://yunchenli.github.io/hexotestsite/tags/SQL/"},{"name":"Data","slug":"Data","permalink":"https://yunchenli.github.io/hexotestsite/tags/Data/"},{"name":"Non SQL","slug":"Non-SQL","permalink":"https://yunchenli.github.io/hexotestsite/tags/Non-SQL/"},{"name":"Python","slug":"Python","permalink":"https://yunchenli.github.io/hexotestsite/tags/Python/"},{"name":"Tensorflow","slug":"Tensorflow","permalink":"https://yunchenli.github.io/hexotestsite/tags/Tensorflow/"},{"name":"Digital Twins","slug":"Digital-Twins","permalink":"https://yunchenli.github.io/hexotestsite/tags/Digital-Twins/"},{"name":"AI","slug":"AI","permalink":"https://yunchenli.github.io/hexotestsite/tags/AI/"},{"name":"AR/VR","slug":"AR-VR","permalink":"https://yunchenli.github.io/hexotestsite/tags/AR-VR/"},{"name":"Chromebook","slug":"Chromebook","permalink":"https://yunchenli.github.io/hexotestsite/tags/Chromebook/"},{"name":"ChromOSO","slug":"ChromOSO","permalink":"https://yunchenli.github.io/hexotestsite/tags/ChromOSO/"},{"name":"Github","slug":"Github","permalink":"https://yunchenli.github.io/hexotestsite/tags/Github/"},{"name":"Hexo","slug":"Hexo","permalink":"https://yunchenli.github.io/hexotestsite/tags/Hexo/"},{"name":"Google Analytics","slug":"Google-Analytics","permalink":"https://yunchenli.github.io/hexotestsite/tags/Google-Analytics/"},{"name":"R","slug":"R","permalink":"https://yunchenli.github.io/hexotestsite/tags/R/"},{"name":"Troubleshooting","slug":"Troubleshooting","permalink":"https://yunchenli.github.io/hexotestsite/tags/Troubleshooting/"},{"name":"Data Visulization","slug":"Data-Visulization","permalink":"https://yunchenli.github.io/hexotestsite/tags/Data-Visulization/"},{"name":"Deep learning","slug":"Deep-learning","permalink":"https://yunchenli.github.io/hexotestsite/tags/Deep-learning/"},{"name":"Machine learning","slug":"Machine-learning","permalink":"https://yunchenli.github.io/hexotestsite/tags/Machine-learning/"},{"name":"HTML","slug":"HTML","permalink":"https://yunchenli.github.io/hexotestsite/tags/HTML/"},{"name":"IT","slug":"IT","permalink":"https://yunchenli.github.io/hexotestsite/tags/IT/"},{"name":"Industry 4.0","slug":"Industry-4-0","permalink":"https://yunchenli.github.io/hexotestsite/tags/Industry-4-0/"},{"name":"Cloud integration","slug":"Cloud-integration","permalink":"https://yunchenli.github.io/hexotestsite/tags/Cloud-integration/"},{"name":"Roadmap","slug":"Roadmap","permalink":"https://yunchenli.github.io/hexotestsite/tags/Roadmap/"},{"name":"Product management","slug":"Product-management","permalink":"https://yunchenli.github.io/hexotestsite/tags/Product-management/"},{"name":"Sharing","slug":"Sharing","permalink":"https://yunchenli.github.io/hexotestsite/tags/Sharing/"},{"name":"Data visualization","slug":"Data-visualization","permalink":"https://yunchenli.github.io/hexotestsite/tags/Data-visualization/"},{"name":"ChromeOS","slug":"ChromeOS","permalink":"https://yunchenli.github.io/hexotestsite/tags/ChromeOS/"},{"name":"Excel","slug":"Excel","permalink":"https://yunchenli.github.io/hexotestsite/tags/Excel/"},{"name":"System integration","slug":"System-integration","permalink":"https://yunchenli.github.io/hexotestsite/tags/System-integration/"},{"name":"BigQuery","slug":"BigQuery","permalink":"https://yunchenli.github.io/hexotestsite/tags/BigQuery/"},{"name":"Toolkit","slug":"Toolkit","permalink":"https://yunchenli.github.io/hexotestsite/tags/Toolkit/"},{"name":"RMA","slug":"RMA","permalink":"https://yunchenli.github.io/hexotestsite/tags/RMA/"},{"name":"Process flow","slug":"Process-flow","permalink":"https://yunchenli.github.io/hexotestsite/tags/Process-flow/"},{"name":"Quality management","slug":"Quality-management","permalink":"https://yunchenli.github.io/hexotestsite/tags/Quality-management/"},{"name":"Data flow","slug":"Data-flow","permalink":"https://yunchenli.github.io/hexotestsite/tags/Data-flow/"},{"name":"Hexo, Github, Web","slug":"Hexo-Github-Web","permalink":"https://yunchenli.github.io/hexotestsite/tags/Hexo-Github-Web/"},{"name":"NPI","slug":"NPI","permalink":"https://yunchenli.github.io/hexotestsite/tags/NPI/"},{"name":"Apple","slug":"Apple","permalink":"https://yunchenli.github.io/hexotestsite/tags/Apple/"},{"name":"Quality","slug":"Quality","permalink":"https://yunchenli.github.io/hexotestsite/tags/Quality/"},{"name":"PPT","slug":"PPT","permalink":"https://yunchenli.github.io/hexotestsite/tags/PPT/"}]}